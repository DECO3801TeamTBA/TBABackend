// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WanderListAPI.Data;

namespace WanderListAPI.Migrations
{
    [DbContext(typeof(WanderListDbContext))]
    partial class WanderListDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "53357811-244f-474c-9cdb-9e9ad1d3dc00",
                            ConcurrencyStamp = "9aa0a0c0-1b03-4bc4-a6e3-6e27df2899ae",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "f04ae5a9-25d2-4fd6-bbc6-64ef93bb1585",
                            ConcurrencyStamp = "ed1bc63d-9838-4900-a4d5-abea58381cad",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "9eeac19b-9df1-4bab-9e70-38bc4af917bd",
                            RoleId = "53357811-244f-474c-9cdb-9e9ad1d3dc00"
                        },
                        new
                        {
                            UserId = "e865cca8-85ca-4f56-9e77-8c0394e48207",
                            RoleId = "53357811-244f-474c-9cdb-9e9ad1d3dc00"
                        },
                        new
                        {
                            UserId = "14dae795-570a-4ddd-95df-603b19b16e53",
                            RoleId = "53357811-244f-474c-9cdb-9e9ad1d3dc00"
                        },
                        new
                        {
                            UserId = "7b26062c-2243-474e-9254-a158f8491b1f",
                            RoleId = "53357811-244f-474c-9cdb-9e9ad1d3dc00"
                        },
                        new
                        {
                            UserId = "730f6a71-49c9-445d-8e71-868f497ffffa",
                            RoleId = "53357811-244f-474c-9cdb-9e9ad1d3dc00"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Value")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WanderListAPI.Models.Activity", b =>
                {
                    b.Property<Guid>("ActivityId")
                        .HasColumnType("char(36)");

                    b.HasKey("ActivityId");

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            ActivityId = new Guid("bc0f26b5-3341-425f-8626-f79de9563bea")
                        },
                        new
                        {
                            ActivityId = new Guid("2192d829-54d6-4290-b230-638304f60ae5")
                        },
                        new
                        {
                            ActivityId = new Guid("17f3d026-e975-4a0b-ab5c-223a682400bc")
                        },
                        new
                        {
                            ActivityId = new Guid("72d6b13e-79af-4c56-b115-8fc616051ccd")
                        },
                        new
                        {
                            ActivityId = new Guid("86eaa7cd-22c3-4b23-9d7a-a6a40a13df2b")
                        },
                        new
                        {
                            ActivityId = new Guid("9a69e9d4-75e5-42db-92f7-c984aa8728ab")
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<Guid>("ProfilePicResourceMetaId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.HasIndex("ProfilePicResourceMetaId");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "9eeac19b-9df1-4bab-9e70-38bc4af917bd",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "93127eca-4252-40c1-b93f-7f99785c8aa5",
                            Email = "Norville.Rogers@pretend.com",
                            EmailConfirmed = false,
                            FirstName = "Norville",
                            LastName = "Rogers",
                            LockoutEnabled = false,
                            NormalizedEmail = "NORVILLE.ROGERS@PRETEND.COM",
                            NormalizedUserName = "SHAGGY",
                            PasswordHash = "AQAAAAEAACcQAAAAEBq4m/N4x/iWsDqeGYliVgEXWhwhBwaxGnhbI6flRpBcesKLSqUD0GeayUPI/9a2ng==",
                            PhoneNumberConfirmed = false,
                            Points = 100,
                            ProfilePicResourceMetaId = new Guid("74b38bc8-db1e-48a0-8ac2-dfbb0ca23d9c"),
                            SecurityStamp = "844ece07-8b4a-4fad-80e3-3543fe23d3d4",
                            TwoFactorEnabled = false,
                            UserName = "Shaggy"
                        },
                        new
                        {
                            Id = "e865cca8-85ca-4f56-9e77-8c0394e48207",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7312100b-bf1c-4812-994b-3d84d386499d",
                            Email = "Scoobert.Doo@pretend.com",
                            EmailConfirmed = false,
                            FirstName = "Scoobert",
                            LastName = "Doo",
                            LockoutEnabled = false,
                            NormalizedEmail = "SCOOBERT.DOO@PRETEND.COM",
                            NormalizedUserName = "SCOOBY",
                            PasswordHash = "AQAAAAEAACcQAAAAELTUBkMfl5uReSMiSPZXtRs9E9xcAJw/JfZV/ClU4oMtyKYQnGfIT4Ad/REsJicOWw==",
                            PhoneNumberConfirmed = false,
                            Points = 500,
                            ProfilePicResourceMetaId = new Guid("a552b281-498d-4577-b102-83df5b6c8e0d"),
                            SecurityStamp = "bd3b3fb6-2f3c-45b9-8db9-8d19f3bde0af",
                            TwoFactorEnabled = false,
                            UserName = "Scooby"
                        },
                        new
                        {
                            Id = "14dae795-570a-4ddd-95df-603b19b16e53",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7d122b16-c972-44b4-a999-a6b4a5017e39",
                            Email = "Velma.Dinkley@pretend.com",
                            EmailConfirmed = false,
                            FirstName = "Velma",
                            LastName = "Dinkley",
                            LockoutEnabled = false,
                            NormalizedEmail = "VELMA.DINKLEY@PRETEND.COM",
                            NormalizedUserName = "VELMA",
                            PasswordHash = "AQAAAAEAACcQAAAAEOYbK40kNP9RkpTkQNrnfl403Fi8pNs+ebPNCd6WbBsUmkF9/twiAQLWly2mMNHiiw==",
                            PhoneNumberConfirmed = false,
                            Points = 400,
                            ProfilePicResourceMetaId = new Guid("a3865d3e-d89f-499e-89d9-342937feccb4"),
                            SecurityStamp = "f4cc5202-aafc-43f6-8475-9d3bc23622d6",
                            TwoFactorEnabled = false,
                            UserName = "Velma"
                        },
                        new
                        {
                            Id = "7b26062c-2243-474e-9254-a158f8491b1f",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "10e69ce4-1270-4dcb-b912-f6515df110f8",
                            Email = "Fred.Jones@pretend.com",
                            EmailConfirmed = false,
                            FirstName = "Fred",
                            LastName = "Jones",
                            LockoutEnabled = false,
                            NormalizedEmail = "FRED.JONES@PRETEND.COM",
                            NormalizedUserName = "FRED",
                            PasswordHash = "AQAAAAEAACcQAAAAEHb7TslhAN/kEUP6tga4enSYjMaM5tQsFtKN7JzjC3oxwFRQIR/jpxPq+HZhFRGYrA==",
                            PhoneNumberConfirmed = false,
                            Points = 375,
                            ProfilePicResourceMetaId = new Guid("83c45b65-bed3-4968-9452-b164c52346d3"),
                            SecurityStamp = "4ec28e7d-006c-44cc-a140-f62a7c0e7193",
                            TwoFactorEnabled = false,
                            UserName = "Fred"
                        },
                        new
                        {
                            Id = "730f6a71-49c9-445d-8e71-868f497ffffa",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4b351e7a-bc02-4ac4-97a3-b1a52d3fe5c7",
                            Email = "Daphne.Blakeo@pretend.com",
                            EmailConfirmed = false,
                            FirstName = "Daphne",
                            LastName = "Blakeo",
                            LockoutEnabled = false,
                            NormalizedEmail = "DAPHNE.BLAKEO@PRETEND.COM",
                            NormalizedUserName = "DAPHNE",
                            PasswordHash = "AQAAAAEAACcQAAAAEFyceip7yN0yTgcUUgMijIkwayayj3BMiusf6Ep33U1vN5QF54x8hMU0mOJ98CZbfQ==",
                            PhoneNumberConfirmed = false,
                            Points = 400,
                            ProfilePicResourceMetaId = new Guid("2517a391-99c3-478a-8c13-aa8dfec383ba"),
                            SecurityStamp = "31e03685-0e2a-406d-8b6a-09bfa117ae27",
                            TwoFactorEnabled = false,
                            UserName = "Daphne"
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.City", b =>
                {
                    b.Property<Guid>("CityId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Country")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Video")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CityId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            CityId = new Guid("26e08eeb-c653-44a4-a6c0-43c91fe825b4"),
                            Country = "Australia",
                            Video = "nDHlEG48b-M"
                        },
                        new
                        {
                            CityId = new Guid("58dab70e-c8fd-49a9-a67a-3fd6dd0f4210"),
                            Country = "Australia",
                            Video = "Yc7r_bbt00M"
                        },
                        new
                        {
                            CityId = new Guid("5a136b8f-9e27-4621-abef-504456d347de"),
                            Country = "Australia",
                            Video = "Rzn5WGnS350"
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.Content", b =>
                {
                    b.Property<Guid>("ContentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<Guid>("CityId")
                        .HasColumnType("char(36)");

                    b.Property<int>("EconomicRating")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRating")
                        .HasColumnType("int");

                    b.Property<bool>("Featured")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("SocialRating")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ContentId");

                    b.HasIndex("CityId");

                    b.ToTable("Content");

                    b.HasData(
                        new
                        {
                            ContentId = new Guid("bc0f26b5-3341-425f-8626-f79de9563bea"),
                            Capacity = 5,
                            CityId = new Guid("26e08eeb-c653-44a4-a6c0-43c91fe825b4"),
                            EconomicRating = 5,
                            EnvironmentalRating = 3,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("2192d829-54d6-4290-b230-638304f60ae5"),
                            Capacity = 5,
                            CityId = new Guid("26e08eeb-c653-44a4-a6c0-43c91fe825b4"),
                            EconomicRating = 5,
                            EnvironmentalRating = 3,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("17f3d026-e975-4a0b-ab5c-223a682400bc"),
                            Capacity = 5,
                            CityId = new Guid("58dab70e-c8fd-49a9-a67a-3fd6dd0f4210"),
                            EconomicRating = 5,
                            EnvironmentalRating = 5,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("72d6b13e-79af-4c56-b115-8fc616051ccd"),
                            Capacity = 5,
                            CityId = new Guid("5a136b8f-9e27-4621-abef-504456d347de"),
                            EconomicRating = 5,
                            EnvironmentalRating = 3,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("86eaa7cd-22c3-4b23-9d7a-a6a40a13df2b"),
                            Capacity = 5,
                            CityId = new Guid("5a136b8f-9e27-4621-abef-504456d347de"),
                            EconomicRating = 3,
                            EnvironmentalRating = 5,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("9a69e9d4-75e5-42db-92f7-c984aa8728ab"),
                            Capacity = 5,
                            CityId = new Guid("5a136b8f-9e27-4621-abef-504456d347de"),
                            EconomicRating = 5,
                            EnvironmentalRating = 5,
                            Featured = false,
                            SocialRating = 4
                        },
                        new
                        {
                            ContentId = new Guid("d3bcb61c-e5f5-4497-9bf8-3cf1ded1f508"),
                            Capacity = 5,
                            CityId = new Guid("26e08eeb-c653-44a4-a6c0-43c91fe825b4"),
                            EconomicRating = 5,
                            EnvironmentalRating = 5,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("06591e55-45a8-412c-9cab-105c9843a116"),
                            Capacity = 5,
                            CityId = new Guid("26e08eeb-c653-44a4-a6c0-43c91fe825b4"),
                            EconomicRating = 5,
                            EnvironmentalRating = 4,
                            Featured = false,
                            SocialRating = 3
                        },
                        new
                        {
                            ContentId = new Guid("93b4ccec-711e-4461-afc7-7f15c33d1017"),
                            Capacity = 5,
                            CityId = new Guid("58dab70e-c8fd-49a9-a67a-3fd6dd0f4210"),
                            EconomicRating = 3,
                            EnvironmentalRating = 3,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("fd39f7ef-5fe4-4670-ab7a-11e63b494aa4"),
                            Capacity = 5,
                            CityId = new Guid("58dab70e-c8fd-49a9-a67a-3fd6dd0f4210"),
                            EconomicRating = 4,
                            EnvironmentalRating = 5,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("a4d180f9-d4a0-4962-a623-adcf5bea3faf"),
                            Capacity = 5,
                            CityId = new Guid("58dab70e-c8fd-49a9-a67a-3fd6dd0f4210"),
                            EconomicRating = 3,
                            EnvironmentalRating = 2,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("9a29bc1d-8c33-4f00-b953-50f2fee9b657"),
                            Capacity = 5,
                            CityId = new Guid("5a136b8f-9e27-4621-abef-504456d347de"),
                            EconomicRating = 5,
                            EnvironmentalRating = 4,
                            Featured = false,
                            SocialRating = 5
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.Destination", b =>
                {
                    b.Property<Guid>("DestinationId")
                        .HasColumnType("char(36)");

                    b.HasKey("DestinationId");

                    b.ToTable("Destination");

                    b.HasData(
                        new
                        {
                            DestinationId = new Guid("d3bcb61c-e5f5-4497-9bf8-3cf1ded1f508")
                        },
                        new
                        {
                            DestinationId = new Guid("06591e55-45a8-412c-9cab-105c9843a116")
                        },
                        new
                        {
                            DestinationId = new Guid("93b4ccec-711e-4461-afc7-7f15c33d1017")
                        },
                        new
                        {
                            DestinationId = new Guid("fd39f7ef-5fe4-4670-ab7a-11e63b494aa4")
                        },
                        new
                        {
                            DestinationId = new Guid("a4d180f9-d4a0-4962-a623-adcf5bea3faf")
                        },
                        new
                        {
                            DestinationId = new Guid("9a29bc1d-8c33-4f00-b953-50f2fee9b657")
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.History", b =>
                {
                    b.Property<Guid>("ContentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ContentId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("History");

                    b.HasData(
                        new
                        {
                            ContentId = new Guid("bc0f26b5-3341-425f-8626-f79de9563bea"),
                            UserId = "9eeac19b-9df1-4bab-9e70-38bc4af917bd",
                            Date = new DateTime(2020, 10, 24, 16, 9, 52, 152, DateTimeKind.Local).AddTicks(9217)
                        },
                        new
                        {
                            ContentId = new Guid("2192d829-54d6-4290-b230-638304f60ae5"),
                            UserId = "9eeac19b-9df1-4bab-9e70-38bc4af917bd",
                            Date = new DateTime(2020, 10, 24, 16, 9, 52, 153, DateTimeKind.Local).AddTicks(3228)
                        },
                        new
                        {
                            ContentId = new Guid("bc0f26b5-3341-425f-8626-f79de9563bea"),
                            UserId = "e865cca8-85ca-4f56-9e77-8c0394e48207",
                            Date = new DateTime(2020, 10, 24, 16, 9, 52, 153, DateTimeKind.Local).AddTicks(6428)
                        },
                        new
                        {
                            ContentId = new Guid("86eaa7cd-22c3-4b23-9d7a-a6a40a13df2b"),
                            UserId = "14dae795-570a-4ddd-95df-603b19b16e53",
                            Date = new DateTime(2020, 10, 24, 16, 9, 52, 153, DateTimeKind.Local).AddTicks(6501)
                        },
                        new
                        {
                            ContentId = new Guid("2192d829-54d6-4290-b230-638304f60ae5"),
                            UserId = "14dae795-570a-4ddd-95df-603b19b16e53",
                            Date = new DateTime(2020, 10, 24, 16, 9, 52, 153, DateTimeKind.Local).AddTicks(6508)
                        },
                        new
                        {
                            ContentId = new Guid("06591e55-45a8-412c-9cab-105c9843a116"),
                            UserId = "9eeac19b-9df1-4bab-9e70-38bc4af917bd",
                            Date = new DateTime(2020, 10, 24, 16, 9, 52, 160, DateTimeKind.Local).AddTicks(6969)
                        },
                        new
                        {
                            ContentId = new Guid("06591e55-45a8-412c-9cab-105c9843a116"),
                            UserId = "e865cca8-85ca-4f56-9e77-8c0394e48207",
                            Date = new DateTime(2020, 10, 24, 16, 9, 52, 160, DateTimeKind.Local).AddTicks(7039)
                        },
                        new
                        {
                            ContentId = new Guid("d3bcb61c-e5f5-4497-9bf8-3cf1ded1f508"),
                            UserId = "14dae795-570a-4ddd-95df-603b19b16e53",
                            Date = new DateTime(2020, 10, 24, 16, 9, 52, 160, DateTimeKind.Local).AddTicks(7052)
                        },
                        new
                        {
                            ContentId = new Guid("06591e55-45a8-412c-9cab-105c9843a116"),
                            UserId = "14dae795-570a-4ddd-95df-603b19b16e53",
                            Date = new DateTime(2020, 10, 24, 16, 9, 52, 160, DateTimeKind.Local).AddTicks(7059)
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.Item", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CoverImageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Lattitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ItemId");

                    b.HasIndex("CoverImageId");

                    b.ToTable("Item");

                    b.HasData(
                        new
                        {
                            ItemId = new Guid("bc0f26b5-3341-425f-8626-f79de9563bea"),
                            CoverImageId = new Guid("f2924ae3-f6f1-4251-b4e3-9acaf9bafd8b"),
                            Description = "Tour Brisbanes best bars and clubs in a night of fun",
                            Lattitude = -27.470568,
                            Longitude = 153.024866,
                            Name = "Pub Crawl"
                        },
                        new
                        {
                            ItemId = new Guid("2192d829-54d6-4290-b230-638304f60ae5"),
                            CoverImageId = new Guid("599ff097-5da6-432a-a649-11c070126c25"),
                            Description = "Visit Brisbanes best universities",
                            Lattitude = -27.477118999999998,
                            Longitude = 153.02837199999999,
                            Name = "Uni tour"
                        },
                        new
                        {
                            ItemId = new Guid("17f3d026-e975-4a0b-ab5c-223a682400bc"),
                            CoverImageId = new Guid("06b1b197-5873-45dd-ac38-e346b67c4dc5"),
                            Description = "Get the chance to spot humpback whales right outside of Sydney on this speed boat tour from Circular Quay or Manly Wharf.",
                            Lattitude = -33.856788999999999,
                            Longitude = 151.20925199999999,
                            Name = "Sydney Whale-Watching by Speed Boat"
                        },
                        new
                        {
                            ItemId = new Guid("72d6b13e-79af-4c56-b115-8fc616051ccd"),
                            CoverImageId = new Guid("8bccccc6-c9cf-4b1c-ad1c-c0c854afb5af"),
                            Description = "In an intimate group limited to 16 people, float over Yarra Valley vineyards at sunrise, when the landscapes look most magical.",
                            Lattitude = -37.631934999999999,
                            Longitude = 145.400453,
                            Name = "Yarra Valley Balloon Flight at Sunrise"
                        },
                        new
                        {
                            ItemId = new Guid("86eaa7cd-22c3-4b23-9d7a-a6a40a13df2b"),
                            CoverImageId = new Guid("9aaeb44e-f597-448c-8c04-fff025028863"),
                            Description = "ArtVo is an art gallery with a difference—this immersive art space encourages people to touch, play, and interact with the art, and there are 11 themed zones to explore.",
                            Lattitude = -37.812648000000003,
                            Longitude = 144.93767099999999,
                            Name = "ArtVo Immersive Gallery Experience"
                        },
                        new
                        {
                            ItemId = new Guid("9a69e9d4-75e5-42db-92f7-c984aa8728ab"),
                            CoverImageId = new Guid("c0efe95f-3f46-4370-92e7-30f2d95e6e2e"),
                            Description = "Explore Melbourne from the river at your own pace and without anyone getting in the way on this afternoon kayaking tour.",
                            Lattitude = -37.820380999999998,
                            Longitude = 144.95828700000001,
                            Name = "Melbourne City Afternoon Kayak Tour"
                        },
                        new
                        {
                            ItemId = new Guid("d3bcb61c-e5f5-4497-9bf8-3cf1ded1f508"),
                            CoverImageId = new Guid("f4c432cd-ac81-47b5-8210-ce661e06e815"),
                            Description = "The best uni in brisbane",
                            Lattitude = -27.497408,
                            Longitude = 153.01367999999999,
                            Name = "UQ"
                        },
                        new
                        {
                            ItemId = new Guid("06591e55-45a8-412c-9cab-105c9843a116"),
                            CoverImageId = new Guid("4dc3cebb-e223-4aaf-badb-8811b1f0bc31"),
                            Description = "Super spooooky at night",
                            Lattitude = -27.498972999999999,
                            Longitude = 153.02712,
                            Name = "South Brisbane Cemetery"
                        },
                        new
                        {
                            ItemId = new Guid("93b4ccec-711e-4461-afc7-7f15c33d1017"),
                            CoverImageId = new Guid("d5056f70-0b06-43b8-a531-7fb03125a02b"),
                            Description = "Australia's most famouse landmark",
                            Lattitude = -33.856650999999999,
                            Longitude = 151.21527599999999,
                            Name = "Sydney Opera House"
                        },
                        new
                        {
                            ItemId = new Guid("fd39f7ef-5fe4-4670-ab7a-11e63b494aa4"),
                            CoverImageId = new Guid("eea05605-3272-402e-821a-227b657f38ee"),
                            Description = "Explore the lush plant life, hidden pagodas, and colorful statues at your own speed, or join one of three informative tours that run during the day at no extra cost.",
                            Lattitude = -33.876274000000002,
                            Longitude = 151.20280199999999,
                            Name = "Chinese Garden of Friendship"
                        },
                        new
                        {
                            ItemId = new Guid("a4d180f9-d4a0-4962-a623-adcf5bea3faf"),
                            CoverImageId = new Guid("c2df0405-fb07-495b-afed-c3ea9a94c948"),
                            Description = "See the more than 13,000 aquatic life forms in the 14 themed areas.",
                            Lattitude = -33.869349999999997,
                            Longitude = 151.202192,
                            Name = "SEA LIFE Sydney Aquarium"
                        },
                        new
                        {
                            ItemId = new Guid("9a29bc1d-8c33-4f00-b953-50f2fee9b657"),
                            CoverImageId = new Guid("b984fc53-6449-4570-842b-ea4df77dcf15"),
                            Description = "China Town’s great for Yum Cha, Chinese Food and a visit to Dessert Story, they have the best Taiwanese desserts!",
                            Lattitude = -37.811279999999996,
                            Longitude = 144.96880899999999,
                            Name = "Melbourne Chinatown"
                        },
                        new
                        {
                            ItemId = new Guid("26e08eeb-c653-44a4-a6c0-43c91fe825b4"),
                            CoverImageId = new Guid("6b614456-11db-4f1a-812f-3f3154c8b5e8"),
                            Description = "Brisbane is the capital of Queensland, and the third most populous city in Australia.",
                            Lattitude = -27.467939999999999,
                            Longitude = 153.02808999999999,
                            Name = "Brisbane"
                        },
                        new
                        {
                            ItemId = new Guid("58dab70e-c8fd-49a9-a67a-3fd6dd0f4210"),
                            CoverImageId = new Guid("b266e840-3f79-4f8a-aceb-0585af953cdc"),
                            Description = "Sydney is the state capital of New South Wales and the most populous city in Australia and Oceania.",
                            Lattitude = -33.867849999999997,
                            Longitude = 151.20732000000001,
                            Name = "Sydney"
                        },
                        new
                        {
                            ItemId = new Guid("5a136b8f-9e27-4621-abef-504456d347de"),
                            CoverImageId = new Guid("96e8fe2c-6a5d-408e-833c-49a5187cbd93"),
                            Description = "Melbourne is the capital of Victoria, and the second-most populous city in Australia and Oceania.",
                            Lattitude = -37.814,
                            Longitude = 144.96332000000001,
                            Name = "Melbourne"
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.Junctions.CityUser", b =>
                {
                    b.Property<Guid>("CityId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.HasKey("CityId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("CityUser");

                    b.HasData(
                        new
                        {
                            CityId = new Guid("26e08eeb-c653-44a4-a6c0-43c91fe825b4"),
                            UserId = "9eeac19b-9df1-4bab-9e70-38bc4af917bd",
                            Count = 3
                        },
                        new
                        {
                            CityId = new Guid("26e08eeb-c653-44a4-a6c0-43c91fe825b4"),
                            UserId = "e865cca8-85ca-4f56-9e77-8c0394e48207",
                            Count = 2
                        },
                        new
                        {
                            CityId = new Guid("5a136b8f-9e27-4621-abef-504456d347de"),
                            UserId = "14dae795-570a-4ddd-95df-603b19b16e53",
                            Count = 1
                        },
                        new
                        {
                            CityId = new Guid("26e08eeb-c653-44a4-a6c0-43c91fe825b4"),
                            UserId = "14dae795-570a-4ddd-95df-603b19b16e53",
                            Count = 3
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.Junctions.ContentResourceMeta", b =>
                {
                    b.Property<Guid>("ContentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ResourceMetaId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("ContentId", "ResourceMetaId");

                    b.HasIndex("ResourceMetaId");

                    b.ToTable("ContentResourceMeta");

                    b.HasData(
                        new
                        {
                            ContentId = new Guid("bc0f26b5-3341-425f-8626-f79de9563bea"),
                            ResourceMetaId = new Guid("f2924ae3-f6f1-4251-b4e3-9acaf9bafd8b"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("bc0f26b5-3341-425f-8626-f79de9563bea"),
                            ResourceMetaId = new Guid("39d1c250-bebe-4192-af7a-05187d2784f5"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("bc0f26b5-3341-425f-8626-f79de9563bea"),
                            ResourceMetaId = new Guid("883efb56-479a-47a9-8e2c-625553187ca7"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("2192d829-54d6-4290-b230-638304f60ae5"),
                            ResourceMetaId = new Guid("599ff097-5da6-432a-a649-11c070126c25"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("2192d829-54d6-4290-b230-638304f60ae5"),
                            ResourceMetaId = new Guid("b80708d5-376d-4368-b7e1-5f71d5d36d3f"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("2192d829-54d6-4290-b230-638304f60ae5"),
                            ResourceMetaId = new Guid("92ea3611-cc81-475e-9fd3-3ccbbe8c7b2a"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("17f3d026-e975-4a0b-ab5c-223a682400bc"),
                            ResourceMetaId = new Guid("06b1b197-5873-45dd-ac38-e346b67c4dc5"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("17f3d026-e975-4a0b-ab5c-223a682400bc"),
                            ResourceMetaId = new Guid("1bdfd98d-f1f4-4647-8de7-774a9750e016"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("17f3d026-e975-4a0b-ab5c-223a682400bc"),
                            ResourceMetaId = new Guid("d8409179-d5e0-46dc-80a3-0d17f2e098f2"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("72d6b13e-79af-4c56-b115-8fc616051ccd"),
                            ResourceMetaId = new Guid("8bccccc6-c9cf-4b1c-ad1c-c0c854afb5af"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("72d6b13e-79af-4c56-b115-8fc616051ccd"),
                            ResourceMetaId = new Guid("80125e79-bd6a-4ca6-9ee2-a22edac2d6c7"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("72d6b13e-79af-4c56-b115-8fc616051ccd"),
                            ResourceMetaId = new Guid("6123d448-4955-4308-af5d-cd35cd95b7f7"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("86eaa7cd-22c3-4b23-9d7a-a6a40a13df2b"),
                            ResourceMetaId = new Guid("9aaeb44e-f597-448c-8c04-fff025028863"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("86eaa7cd-22c3-4b23-9d7a-a6a40a13df2b"),
                            ResourceMetaId = new Guid("6c41e2a0-1fd2-4d9f-94c4-4610b0f352ab"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("86eaa7cd-22c3-4b23-9d7a-a6a40a13df2b"),
                            ResourceMetaId = new Guid("43bbf6d7-db73-418a-8953-947394985bf4"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("9a69e9d4-75e5-42db-92f7-c984aa8728ab"),
                            ResourceMetaId = new Guid("c0efe95f-3f46-4370-92e7-30f2d95e6e2e"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("9a69e9d4-75e5-42db-92f7-c984aa8728ab"),
                            ResourceMetaId = new Guid("49f9e196-8f6f-4cc0-a7a4-2b7a5da73cee"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("9a69e9d4-75e5-42db-92f7-c984aa8728ab"),
                            ResourceMetaId = new Guid("e806ce2a-9fe3-4e18-b5fd-79dda216ffd1"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("d3bcb61c-e5f5-4497-9bf8-3cf1ded1f508"),
                            ResourceMetaId = new Guid("f4c432cd-ac81-47b5-8210-ce661e06e815"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("d3bcb61c-e5f5-4497-9bf8-3cf1ded1f508"),
                            ResourceMetaId = new Guid("6d5eea37-8e93-43ba-b82f-3b6b9e38076c"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("d3bcb61c-e5f5-4497-9bf8-3cf1ded1f508"),
                            ResourceMetaId = new Guid("8a49a0a6-983a-4cb8-9829-3665182a6cbe"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("06591e55-45a8-412c-9cab-105c9843a116"),
                            ResourceMetaId = new Guid("4dc3cebb-e223-4aaf-badb-8811b1f0bc31"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("06591e55-45a8-412c-9cab-105c9843a116"),
                            ResourceMetaId = new Guid("3830a757-d155-4163-8f83-b90efe45c53c"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("06591e55-45a8-412c-9cab-105c9843a116"),
                            ResourceMetaId = new Guid("57c84676-98cb-48f2-bef3-65e22e7139a4"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("93b4ccec-711e-4461-afc7-7f15c33d1017"),
                            ResourceMetaId = new Guid("d5056f70-0b06-43b8-a531-7fb03125a02b"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("93b4ccec-711e-4461-afc7-7f15c33d1017"),
                            ResourceMetaId = new Guid("7385025a-3cad-4c06-a128-63faba227ade"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("93b4ccec-711e-4461-afc7-7f15c33d1017"),
                            ResourceMetaId = new Guid("48fa6cca-e61e-4ee7-ac08-9a950e98fb0b"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("fd39f7ef-5fe4-4670-ab7a-11e63b494aa4"),
                            ResourceMetaId = new Guid("eea05605-3272-402e-821a-227b657f38ee"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("fd39f7ef-5fe4-4670-ab7a-11e63b494aa4"),
                            ResourceMetaId = new Guid("256c7770-71bd-4261-9b26-b47d89d61b82"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("fd39f7ef-5fe4-4670-ab7a-11e63b494aa4"),
                            ResourceMetaId = new Guid("867540eb-577d-4cf3-bdef-14fdbf8ed2ea"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("a4d180f9-d4a0-4962-a623-adcf5bea3faf"),
                            ResourceMetaId = new Guid("c2df0405-fb07-495b-afed-c3ea9a94c948"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("a4d180f9-d4a0-4962-a623-adcf5bea3faf"),
                            ResourceMetaId = new Guid("2571b013-aa2a-455f-b759-e1dab4849895"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("a4d180f9-d4a0-4962-a623-adcf5bea3faf"),
                            ResourceMetaId = new Guid("cd431ce8-2fd2-4a11-b20e-bb39160f7d13"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("9a29bc1d-8c33-4f00-b953-50f2fee9b657"),
                            ResourceMetaId = new Guid("b984fc53-6449-4570-842b-ea4df77dcf15"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("9a29bc1d-8c33-4f00-b953-50f2fee9b657"),
                            ResourceMetaId = new Guid("4312f7ed-3e9d-4c61-94a0-cbbb82672ced"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("9a29bc1d-8c33-4f00-b953-50f2fee9b657"),
                            ResourceMetaId = new Guid("a303d0eb-a9eb-4634-a69c-106edcb9f4e6"),
                            Number = 2
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.QR", b =>
                {
                    b.Property<Guid>("QRId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ContentId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Expiry")
                        .HasColumnType("datetime(6)");

                    b.HasKey("QRId");

                    b.HasIndex("ContentId");

                    b.ToTable("QR");

                    b.HasData(
                        new
                        {
                            QRId = new Guid("e94fb825-69a5-4616-987e-5ba923553221"),
                            ContentId = new Guid("bc0f26b5-3341-425f-8626-f79de9563bea"),
                            Expiry = new DateTime(2021, 1, 24, 16, 9, 52, 161, DateTimeKind.Local).AddTicks(3575)
                        },
                        new
                        {
                            QRId = new Guid("d1429357-fa0d-48c2-b0a5-d3b03741e9e9"),
                            ContentId = new Guid("2192d829-54d6-4290-b230-638304f60ae5"),
                            Expiry = new DateTime(2021, 1, 24, 16, 9, 52, 161, DateTimeKind.Local).AddTicks(4747)
                        },
                        new
                        {
                            QRId = new Guid("00e899a5-2c96-48c7-a3af-baa8c4c074cf"),
                            ContentId = new Guid("17f3d026-e975-4a0b-ab5c-223a682400bc"),
                            Expiry = new DateTime(2021, 1, 24, 16, 9, 52, 161, DateTimeKind.Local).AddTicks(4779)
                        },
                        new
                        {
                            QRId = new Guid("729d6d26-1c96-4087-abad-6c56f7de4e89"),
                            ContentId = new Guid("72d6b13e-79af-4c56-b115-8fc616051ccd"),
                            Expiry = new DateTime(2021, 1, 24, 16, 9, 52, 161, DateTimeKind.Local).AddTicks(4788)
                        },
                        new
                        {
                            QRId = new Guid("98e571f9-7a3b-4c0d-a8ae-32d4b06f737f"),
                            ContentId = new Guid("86eaa7cd-22c3-4b23-9d7a-a6a40a13df2b"),
                            Expiry = new DateTime(2021, 1, 24, 16, 9, 52, 161, DateTimeKind.Local).AddTicks(4793)
                        },
                        new
                        {
                            QRId = new Guid("9ca62dd6-3172-426e-87fd-900663197629"),
                            ContentId = new Guid("9a69e9d4-75e5-42db-92f7-c984aa8728ab"),
                            Expiry = new DateTime(2021, 1, 24, 16, 9, 52, 161, DateTimeKind.Local).AddTicks(4802)
                        },
                        new
                        {
                            QRId = new Guid("75425683-5be2-4a2f-9760-7598053cc712"),
                            ContentId = new Guid("d3bcb61c-e5f5-4497-9bf8-3cf1ded1f508"),
                            Expiry = new DateTime(2021, 1, 24, 16, 9, 52, 161, DateTimeKind.Local).AddTicks(4846)
                        },
                        new
                        {
                            QRId = new Guid("6ed07c3e-12b5-48ac-a912-f0c3036482d7"),
                            ContentId = new Guid("06591e55-45a8-412c-9cab-105c9843a116"),
                            Expiry = new DateTime(2021, 1, 24, 16, 9, 52, 161, DateTimeKind.Local).AddTicks(4852)
                        },
                        new
                        {
                            QRId = new Guid("e00c546e-eef0-442e-b4b3-66324d2f696c"),
                            ContentId = new Guid("93b4ccec-711e-4461-afc7-7f15c33d1017"),
                            Expiry = new DateTime(2021, 1, 24, 16, 9, 52, 161, DateTimeKind.Local).AddTicks(4857)
                        },
                        new
                        {
                            QRId = new Guid("28273ddb-7ab5-49d8-916e-f16fab359b3b"),
                            ContentId = new Guid("fd39f7ef-5fe4-4670-ab7a-11e63b494aa4"),
                            Expiry = new DateTime(2021, 1, 24, 16, 9, 52, 161, DateTimeKind.Local).AddTicks(4864)
                        },
                        new
                        {
                            QRId = new Guid("49b44a90-b25b-4ef2-a0cb-bd3df96e158e"),
                            ContentId = new Guid("a4d180f9-d4a0-4962-a623-adcf5bea3faf"),
                            Expiry = new DateTime(2021, 1, 24, 16, 9, 52, 161, DateTimeKind.Local).AddTicks(4868)
                        },
                        new
                        {
                            QRId = new Guid("a2546b7d-cf5e-4193-b82a-84a2ad024a57"),
                            ContentId = new Guid("9a29bc1d-8c33-4f00-b953-50f2fee9b657"),
                            Expiry = new DateTime(2021, 1, 24, 16, 9, 52, 161, DateTimeKind.Local).AddTicks(4872)
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.Resource", b =>
                {
                    b.Property<Guid>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<byte[]>("Data")
                        .HasColumnType("longblob");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ResourceId");

                    b.ToTable("Resource");

                    b.HasData(
                        new
                        {
                            ResourceId = new Guid("f2924ae3-f6f1-4251-b4e3-9acaf9bafd8b"),
                            FilePath = "./Resources/Images/PubCrawl.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("39d1c250-bebe-4192-af7a-05187d2784f5"),
                            FilePath = "./Resources/Images/PubCrawl - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("883efb56-479a-47a9-8e2c-625553187ca7"),
                            FilePath = "./Resources/Images/PubCrawl - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("599ff097-5da6-432a-a649-11c070126c25"),
                            FilePath = "./Resources/Images/UniTour.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("b80708d5-376d-4368-b7e1-5f71d5d36d3f"),
                            FilePath = "./Resources/Images/UniTour - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("92ea3611-cc81-475e-9fd3-3ccbbe8c7b2a"),
                            FilePath = "./Resources/Images/UniTour - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("06b1b197-5873-45dd-ac38-e346b67c4dc5"),
                            FilePath = "./Resources/Images/Balloon Flight.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("1bdfd98d-f1f4-4647-8de7-774a9750e016"),
                            FilePath = "./Resources/Images/Balloon Flight - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("d8409179-d5e0-46dc-80a3-0d17f2e098f2"),
                            FilePath = "./Resources/Images/Balloon Flight - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("8bccccc6-c9cf-4b1c-ad1c-c0c854afb5af"),
                            FilePath = "./Resources/Images/Balloon Flight.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("80125e79-bd6a-4ca6-9ee2-a22edac2d6c7"),
                            FilePath = "./Resources/Images/Balloon Flight - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("6123d448-4955-4308-af5d-cd35cd95b7f7"),
                            FilePath = "./Resources/Images/Balloon Flight - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("9aaeb44e-f597-448c-8c04-fff025028863"),
                            FilePath = "./Resources/Images/Art Gallery.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("6c41e2a0-1fd2-4d9f-94c4-4610b0f352ab"),
                            FilePath = "./Resources/Images/Art Gallery - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("43bbf6d7-db73-418a-8953-947394985bf4"),
                            FilePath = "./Resources/Images/Art Gallery - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("c0efe95f-3f46-4370-92e7-30f2d95e6e2e"),
                            FilePath = "./Resources/Images/Balloon Flight.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("49f9e196-8f6f-4cc0-a7a4-2b7a5da73cee"),
                            FilePath = "./Resources/Images/Balloon Flight - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("e806ce2a-9fe3-4e18-b5fd-79dda216ffd1"),
                            FilePath = "./Resources/Images/Balloon Flight - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("f4c432cd-ac81-47b5-8210-ce661e06e815"),
                            FilePath = "./Resources/Images/UQ.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("6d5eea37-8e93-43ba-b82f-3b6b9e38076c"),
                            FilePath = "./Resources/Images/UQ - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("8a49a0a6-983a-4cb8-9829-3665182a6cbe"),
                            FilePath = "./Resources/Images/UQ - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("4dc3cebb-e223-4aaf-badb-8811b1f0bc31"),
                            FilePath = "./Resources/Images/SouthBrisbaneCemetery.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("3830a757-d155-4163-8f83-b90efe45c53c"),
                            FilePath = "./Resources/Images/SouthBrisbaneCemetery - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("57c84676-98cb-48f2-bef3-65e22e7139a4"),
                            FilePath = "./Resources/Images/SouthBrisbaneCemetery - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("d5056f70-0b06-43b8-a531-7fb03125a02b"),
                            FilePath = "./Resources/Images/OperaHouse.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("7385025a-3cad-4c06-a128-63faba227ade"),
                            FilePath = "./Resources/Images/OperaHouse - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("48fa6cca-e61e-4ee7-ac08-9a950e98fb0b"),
                            FilePath = "./Resources/Images/OperaHouse - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("eea05605-3272-402e-821a-227b657f38ee"),
                            FilePath = "./Resources/Images/OperaHouse.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("256c7770-71bd-4261-9b26-b47d89d61b82"),
                            FilePath = "./Resources/Images/OperaHouse - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("867540eb-577d-4cf3-bdef-14fdbf8ed2ea"),
                            FilePath = "./Resources/Images/OperaHouse - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("c2df0405-fb07-495b-afed-c3ea9a94c948"),
                            FilePath = "./Resources/Images/Aquarium.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("2571b013-aa2a-455f-b759-e1dab4849895"),
                            FilePath = "./Resources/Images/Aquarium - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("cd431ce8-2fd2-4a11-b20e-bb39160f7d13"),
                            FilePath = "./Resources/Images/Aquarium - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("b984fc53-6449-4570-842b-ea4df77dcf15"),
                            FilePath = "./Resources/Images/Chinatown.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("4312f7ed-3e9d-4c61-94a0-cbbb82672ced"),
                            FilePath = "./Resources/Images/Chinatown - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("a303d0eb-a9eb-4634-a69c-106edcb9f4e6"),
                            FilePath = "./Resources/Images/Chinatown - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("74b38bc8-db1e-48a0-8ac2-dfbb0ca23d9c"),
                            FilePath = "./Resources/Images/Harold.jfif"
                        },
                        new
                        {
                            ResourceId = new Guid("a552b281-498d-4577-b102-83df5b6c8e0d"),
                            FilePath = "./Resources/Images/DefaultUser.jfif"
                        },
                        new
                        {
                            ResourceId = new Guid("a3865d3e-d89f-499e-89d9-342937feccb4"),
                            FilePath = "./Resources/Images/Velma.jfif"
                        },
                        new
                        {
                            ResourceId = new Guid("83c45b65-bed3-4968-9452-b164c52346d3"),
                            FilePath = "./Resources/Images/DefaultUser.jfif"
                        },
                        new
                        {
                            ResourceId = new Guid("2517a391-99c3-478a-8c13-aa8dfec383ba"),
                            FilePath = "./Resources/Images/DefaultUser.jfif"
                        },
                        new
                        {
                            ResourceId = new Guid("6b614456-11db-4f1a-812f-3f3154c8b5e8"),
                            FilePath = "./Resources/Images/Brisbane.jfif"
                        },
                        new
                        {
                            ResourceId = new Guid("b266e840-3f79-4f8a-aceb-0585af953cdc"),
                            FilePath = "./Resources/Images/Sydney.jfif"
                        },
                        new
                        {
                            ResourceId = new Guid("96e8fe2c-6a5d-408e-833c-49a5187cbd93"),
                            FilePath = "./Resources/Images/Melbourne.jfif"
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.ResourceMeta", b =>
                {
                    b.Property<Guid>("ResourceMetaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("Length")
                        .HasColumnType("bigint");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("OnDisk")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ResourceMetaId");

                    b.ToTable("ResourceMeta");

                    b.HasData(
                        new
                        {
                            ResourceMetaId = new Guid("f2924ae3-f6f1-4251-b4e3-9acaf9bafd8b"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 147, DateTimeKind.Local).AddTicks(2671),
                            Description = "PubCrawl",
                            Extension = ".jpg",
                            FileName = "PubCrawl.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("39d1c250-bebe-4192-af7a-05187d2784f5"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 149, DateTimeKind.Local).AddTicks(3646),
                            Description = "PubCrawl - 2",
                            Extension = ".jpg",
                            FileName = "PubCrawl - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("883efb56-479a-47a9-8e2c-625553187ca7"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 149, DateTimeKind.Local).AddTicks(6592),
                            Description = "PubCrawl - 3",
                            Extension = ".jpg",
                            FileName = "PubCrawl - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("599ff097-5da6-432a-a649-11c070126c25"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 148, DateTimeKind.Local).AddTicks(2948),
                            Description = "UniTour",
                            Extension = ".jpg",
                            FileName = "UniTour.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("b80708d5-376d-4368-b7e1-5f71d5d36d3f"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 150, DateTimeKind.Local).AddTicks(2245),
                            Description = "UniTour - 2",
                            Extension = ".jpg",
                            FileName = "UniTour - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("92ea3611-cc81-475e-9fd3-3ccbbe8c7b2a"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 150, DateTimeKind.Local).AddTicks(4098),
                            Description = "UniTour - 3",
                            Extension = ".jpg",
                            FileName = "UniTour - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("06b1b197-5873-45dd-ac38-e346b67c4dc5"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 148, DateTimeKind.Local).AddTicks(4513),
                            Description = "Balloon Flight",
                            Extension = ".jpg",
                            FileName = "Balloon Flight.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("1bdfd98d-f1f4-4647-8de7-774a9750e016"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 150, DateTimeKind.Local).AddTicks(6018),
                            Description = "Balloon Flight - 2",
                            Extension = ".jpg",
                            FileName = "Balloon Flight - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("d8409179-d5e0-46dc-80a3-0d17f2e098f2"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 150, DateTimeKind.Local).AddTicks(7836),
                            Description = "Balloon Flight - 3",
                            Extension = ".jpg",
                            FileName = "Balloon Flight - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("8bccccc6-c9cf-4b1c-ad1c-c0c854afb5af"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 148, DateTimeKind.Local).AddTicks(5632),
                            Description = "Balloon Flight",
                            Extension = ".jpg",
                            FileName = "Balloon Flight.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("80125e79-bd6a-4ca6-9ee2-a22edac2d6c7"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 150, DateTimeKind.Local).AddTicks(9181),
                            Description = "Balloon Flight - 2",
                            Extension = ".jpg",
                            FileName = "Balloon Flight - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("6123d448-4955-4308-af5d-cd35cd95b7f7"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 151, DateTimeKind.Local).AddTicks(635),
                            Description = "Balloon Flight - 3",
                            Extension = ".jpg",
                            FileName = "Balloon Flight - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("9aaeb44e-f597-448c-8c04-fff025028863"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 148, DateTimeKind.Local).AddTicks(7406),
                            Description = "Art Gallery",
                            Extension = ".jpg",
                            FileName = "Art Gallery.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("6c41e2a0-1fd2-4d9f-94c4-4610b0f352ab"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 151, DateTimeKind.Local).AddTicks(2193),
                            Description = "Art Gallery - 2",
                            Extension = ".jpg",
                            FileName = "Art Gallery - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("43bbf6d7-db73-418a-8953-947394985bf4"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 151, DateTimeKind.Local).AddTicks(4403),
                            Description = "Art Gallery - 3",
                            Extension = ".jpg",
                            FileName = "Art Gallery - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("c0efe95f-3f46-4370-92e7-30f2d95e6e2e"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 148, DateTimeKind.Local).AddTicks(8484),
                            Description = "Balloon Flight",
                            Extension = ".jpg",
                            FileName = "Balloon Flight.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("49f9e196-8f6f-4cc0-a7a4-2b7a5da73cee"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 151, DateTimeKind.Local).AddTicks(5984),
                            Description = "Balloon Flight - 2",
                            Extension = ".jpg",
                            FileName = "Balloon Flight - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("e806ce2a-9fe3-4e18-b5fd-79dda216ffd1"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 151, DateTimeKind.Local).AddTicks(7695),
                            Description = "Balloon Flight - 3",
                            Extension = ".jpg",
                            FileName = "Balloon Flight - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("f4c432cd-ac81-47b5-8210-ce661e06e815"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 155, DateTimeKind.Local).AddTicks(669),
                            Description = "UQ",
                            Extension = ".jpg",
                            FileName = "UQ.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("6d5eea37-8e93-43ba-b82f-3b6b9e38076c"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 157, DateTimeKind.Local).AddTicks(6339),
                            Description = "UQ - 2",
                            Extension = ".jpg",
                            FileName = "UQ - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("8a49a0a6-983a-4cb8-9829-3665182a6cbe"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 158, DateTimeKind.Local).AddTicks(170),
                            Description = "UQ - 3",
                            Extension = ".jpg",
                            FileName = "UQ - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("4dc3cebb-e223-4aaf-badb-8811b1f0bc31"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 155, DateTimeKind.Local).AddTicks(6312),
                            Description = "SouthBrisbaneCemetery",
                            Extension = ".jpg",
                            FileName = "SouthBrisbaneCemetery.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("3830a757-d155-4163-8f83-b90efe45c53c"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 158, DateTimeKind.Local).AddTicks(8599),
                            Description = "SouthBrisbaneCemetery - 2",
                            Extension = ".jpg",
                            FileName = "SouthBrisbaneCemetery - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("57c84676-98cb-48f2-bef3-65e22e7139a4"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 159, DateTimeKind.Local).AddTicks(187),
                            Description = "SouthBrisbaneCemetery - 3",
                            Extension = ".jpg",
                            FileName = "SouthBrisbaneCemetery - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("d5056f70-0b06-43b8-a531-7fb03125a02b"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 155, DateTimeKind.Local).AddTicks(8648),
                            Description = "OperaHouse",
                            Extension = ".jpg",
                            FileName = "OperaHouse.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("7385025a-3cad-4c06-a128-63faba227ade"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 159, DateTimeKind.Local).AddTicks(2886),
                            Description = "OperaHouse - 2",
                            Extension = ".jpg",
                            FileName = "OperaHouse - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("48fa6cca-e61e-4ee7-ac08-9a950e98fb0b"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 159, DateTimeKind.Local).AddTicks(4453),
                            Description = "OperaHouse - 3",
                            Extension = ".jpg",
                            FileName = "OperaHouse - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("eea05605-3272-402e-821a-227b657f38ee"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 156, DateTimeKind.Local).AddTicks(381),
                            Description = "OperaHouse",
                            Extension = ".jpg",
                            FileName = "OperaHouse.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("256c7770-71bd-4261-9b26-b47d89d61b82"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 159, DateTimeKind.Local).AddTicks(6816),
                            Description = "OperaHouse - 2",
                            Extension = ".jpg",
                            FileName = "OperaHouse - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("867540eb-577d-4cf3-bdef-14fdbf8ed2ea"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 159, DateTimeKind.Local).AddTicks(8082),
                            Description = "OperaHouse - 3",
                            Extension = ".jpg",
                            FileName = "OperaHouse - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("c2df0405-fb07-495b-afed-c3ea9a94c948"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 156, DateTimeKind.Local).AddTicks(2209),
                            Description = "Aquarium",
                            Extension = ".jpg",
                            FileName = "Aquarium.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("2571b013-aa2a-455f-b759-e1dab4849895"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 159, DateTimeKind.Local).AddTicks(9600),
                            Description = "Aquarium - 2",
                            Extension = ".jpg",
                            FileName = "Aquarium - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("cd431ce8-2fd2-4a11-b20e-bb39160f7d13"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 160, DateTimeKind.Local).AddTicks(1348),
                            Description = "Aquarium - 3",
                            Extension = ".jpg",
                            FileName = "Aquarium - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("b984fc53-6449-4570-842b-ea4df77dcf15"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 156, DateTimeKind.Local).AddTicks(5722),
                            Description = "Chinatown",
                            Extension = ".jpg",
                            FileName = "Chinatown.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("4312f7ed-3e9d-4c61-94a0-cbbb82672ced"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 160, DateTimeKind.Local).AddTicks(3090),
                            Description = "Chinatown - 2",
                            Extension = ".jpg",
                            FileName = "Chinatown - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("a303d0eb-a9eb-4634-a69c-106edcb9f4e6"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 160, DateTimeKind.Local).AddTicks(6645),
                            Description = "Chinatown - 3",
                            Extension = ".jpg",
                            FileName = "Chinatown - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("74b38bc8-db1e-48a0-8ac2-dfbb0ca23d9c"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 144, DateTimeKind.Local).AddTicks(6846),
                            Description = "Harold",
                            Extension = ".jfif",
                            FileName = "Harold.jfif",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("a552b281-498d-4577-b102-83df5b6c8e0d"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 138, DateTimeKind.Local).AddTicks(5487),
                            Description = "DefaultUser",
                            Extension = ".jfif",
                            FileName = "DefaultUser.jfif",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("a3865d3e-d89f-499e-89d9-342937feccb4"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 144, DateTimeKind.Local).AddTicks(9977),
                            Description = "Velma",
                            Extension = ".jfif",
                            FileName = "Velma.jfif",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("83c45b65-bed3-4968-9452-b164c52346d3"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 141, DateTimeKind.Local).AddTicks(4160),
                            Description = "DefaultUser",
                            Extension = ".jfif",
                            FileName = "DefaultUser.jfif",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("2517a391-99c3-478a-8c13-aa8dfec383ba"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 142, DateTimeKind.Local).AddTicks(8705),
                            Description = "DefaultUser",
                            Extension = ".jfif",
                            FileName = "DefaultUser.jfif",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("6b614456-11db-4f1a-812f-3f3154c8b5e8"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 120, DateTimeKind.Local).AddTicks(4042),
                            Description = "Brisbane",
                            Extension = ".jfif",
                            FileName = "Brisbane.jfif",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("b266e840-3f79-4f8a-aceb-0585af953cdc"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 131, DateTimeKind.Local).AddTicks(3269),
                            Description = "Sydney",
                            Extension = ".jfif",
                            FileName = "Sydney.jfif",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("96e8fe2c-6a5d-408e-833c-49a5187cbd93"),
                            AddedOn = new DateTime(2020, 10, 24, 16, 9, 52, 131, DateTimeKind.Local).AddTicks(5588),
                            Description = "Melbourne",
                            Extension = ".jfif",
                            FileName = "Melbourne.jfif",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.Reward", b =>
                {
                    b.Property<Guid>("RewardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CityId")
                        .HasColumnType("char(36)");

                    b.Property<int>("CountThreshold")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Value")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("RewardId");

                    b.HasIndex("CityId");

                    b.ToTable("Reward");

                    b.HasData(
                        new
                        {
                            RewardId = new Guid("afbba952-bf50-499d-bda7-69370952c3c1"),
                            CityId = new Guid("26e08eeb-c653-44a4-a6c0-43c91fe825b4"),
                            CountThreshold = 1,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Uni Tour Discount",
                            Value = "15% Off your next tour"
                        },
                        new
                        {
                            RewardId = new Guid("73e161f2-5967-4a04-b81e-cc1ef7b18922"),
                            CityId = new Guid("26e08eeb-c653-44a4-a6c0-43c91fe825b4"),
                            CountThreshold = 4,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Drink Discount",
                            Value = "$5 OFF a jug of beer with any meal purchase"
                        },
                        new
                        {
                            RewardId = new Guid("23fe1cc4-2db1-44f7-a8cf-20b8853d9bf9"),
                            CityId = new Guid("58dab70e-c8fd-49a9-a67a-3fd6dd0f4210"),
                            CountThreshold = 1,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sydney Aquarium Voucher",
                            Value = "5% off your next ticket"
                        },
                        new
                        {
                            RewardId = new Guid("9a374c7e-f91c-4fdf-9da0-c84a8127c62b"),
                            CityId = new Guid("58dab70e-c8fd-49a9-a67a-3fd6dd0f4210"),
                            CountThreshold = 0,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Free tour of Chinese Garden of Friendship",
                            Value = "Free tour with any ticket purchase"
                        },
                        new
                        {
                            RewardId = new Guid("4ed94d72-dbea-4bdb-aa79-510308974ffb"),
                            CityId = new Guid("5a136b8f-9e27-4621-abef-504456d347de"),
                            CountThreshold = 1,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Save when you bring a Friend",
                            Value = "1/2 price for the scond person for your Melbourne City Afternoon Kayak Tour"
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.Shortlist", b =>
                {
                    b.Property<Guid>("ShortlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ListName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("ShortlistId");

                    b.HasIndex("UserId");

                    b.ToTable("Shortlist");

                    b.HasData(
                        new
                        {
                            ShortlistId = new Guid("8d590836-f6c0-400e-90bc-b1825699c0b7"),
                            ListName = "Brisbane Holiday",
                            UserId = "14dae795-570a-4ddd-95df-603b19b16e53"
                        },
                        new
                        {
                            ShortlistId = new Guid("2c27bee8-7cfc-4ac3-b5ad-debe0f874a6f"),
                            ListName = "Bucket List",
                            UserId = "14dae795-570a-4ddd-95df-603b19b16e53"
                        },
                        new
                        {
                            ShortlistId = new Guid("fef5d4b0-4607-4813-88d7-679b9666cd26"),
                            ListName = "Shag Spots",
                            UserId = "9eeac19b-9df1-4bab-9e70-38bc4af917bd"
                        },
                        new
                        {
                            ShortlistId = new Guid("2ee3842d-9d38-47e5-81a6-0bd57df50e6b"),
                            ListName = "Ghost Sightings",
                            UserId = "9eeac19b-9df1-4bab-9e70-38bc4af917bd"
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.ShortlistContent", b =>
                {
                    b.Property<Guid>("ContentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ShortlistId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("ContentId", "ShortlistId");

                    b.HasIndex("ShortlistId");

                    b.ToTable("ShortlistContent");

                    b.HasData(
                        new
                        {
                            ContentId = new Guid("bc0f26b5-3341-425f-8626-f79de9563bea"),
                            ShortlistId = new Guid("8d590836-f6c0-400e-90bc-b1825699c0b7"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("2192d829-54d6-4290-b230-638304f60ae5"),
                            ShortlistId = new Guid("8d590836-f6c0-400e-90bc-b1825699c0b7"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("17f3d026-e975-4a0b-ab5c-223a682400bc"),
                            ShortlistId = new Guid("2c27bee8-7cfc-4ac3-b5ad-debe0f874a6f"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("72d6b13e-79af-4c56-b115-8fc616051ccd"),
                            ShortlistId = new Guid("fef5d4b0-4607-4813-88d7-679b9666cd26"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("d3bcb61c-e5f5-4497-9bf8-3cf1ded1f508"),
                            ShortlistId = new Guid("8d590836-f6c0-400e-90bc-b1825699c0b7"),
                            Number = 3
                        },
                        new
                        {
                            ContentId = new Guid("06591e55-45a8-412c-9cab-105c9843a116"),
                            ShortlistId = new Guid("2ee3842d-9d38-47e5-81a6-0bd57df50e6b"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("93b4ccec-711e-4461-afc7-7f15c33d1017"),
                            ShortlistId = new Guid("2c27bee8-7cfc-4ac3-b5ad-debe0f874a6f"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("fd39f7ef-5fe4-4670-ab7a-11e63b494aa4"),
                            ShortlistId = new Guid("fef5d4b0-4607-4813-88d7-679b9666cd26"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("06591e55-45a8-412c-9cab-105c9843a116"),
                            ShortlistId = new Guid("fef5d4b0-4607-4813-88d7-679b9666cd26"),
                            Number = 3
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.UserReward", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<Guid>("RewardId")
                        .HasColumnType("char(36)");

                    b.Property<string>("AppUserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("UserId", "RewardId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("RewardId");

                    b.ToTable("UserReward");

                    b.HasData(
                        new
                        {
                            UserId = "9eeac19b-9df1-4bab-9e70-38bc4af917bd",
                            RewardId = new Guid("afbba952-bf50-499d-bda7-69370952c3c1")
                        },
                        new
                        {
                            UserId = "9eeac19b-9df1-4bab-9e70-38bc4af917bd",
                            RewardId = new Guid("73e161f2-5967-4a04-b81e-cc1ef7b18922")
                        },
                        new
                        {
                            UserId = "e865cca8-85ca-4f56-9e77-8c0394e48207",
                            RewardId = new Guid("afbba952-bf50-499d-bda7-69370952c3c1")
                        },
                        new
                        {
                            UserId = "e865cca8-85ca-4f56-9e77-8c0394e48207",
                            RewardId = new Guid("73e161f2-5967-4a04-b81e-cc1ef7b18922")
                        },
                        new
                        {
                            UserId = "14dae795-570a-4ddd-95df-603b19b16e53",
                            RewardId = new Guid("4ed94d72-dbea-4bdb-aa79-510308974ffb")
                        },
                        new
                        {
                            UserId = "14dae795-570a-4ddd-95df-603b19b16e53",
                            RewardId = new Guid("afbba952-bf50-499d-bda7-69370952c3c1")
                        },
                        new
                        {
                            UserId = "14dae795-570a-4ddd-95df-603b19b16e53",
                            RewardId = new Guid("73e161f2-5967-4a04-b81e-cc1ef7b18922")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WanderListAPI.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WanderListAPI.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WanderListAPI.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WanderListAPI.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.Activity", b =>
                {
                    b.HasOne("WanderListAPI.Models.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.AppUser", b =>
                {
                    b.HasOne("WanderListAPI.Models.ResourceMeta", "ProfilePic")
                        .WithMany()
                        .HasForeignKey("ProfilePicResourceMetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.City", b =>
                {
                    b.HasOne("WanderListAPI.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.Content", b =>
                {
                    b.HasOne("WanderListAPI.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WanderListAPI.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.Destination", b =>
                {
                    b.HasOne("WanderListAPI.Models.Content", "Content")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.History", b =>
                {
                    b.HasOne("WanderListAPI.Models.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WanderListAPI.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.Item", b =>
                {
                    b.HasOne("WanderListAPI.Models.ResourceMeta", "CoverImage")
                        .WithMany()
                        .HasForeignKey("CoverImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.Junctions.CityUser", b =>
                {
                    b.HasOne("WanderListAPI.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WanderListAPI.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.Junctions.ContentResourceMeta", b =>
                {
                    b.HasOne("WanderListAPI.Models.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WanderListAPI.Models.ResourceMeta", "ResourceMeta")
                        .WithMany()
                        .HasForeignKey("ResourceMetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.QR", b =>
                {
                    b.HasOne("WanderListAPI.Models.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.ResourceMeta", b =>
                {
                    b.HasOne("WanderListAPI.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceMetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.Reward", b =>
                {
                    b.HasOne("WanderListAPI.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.Shortlist", b =>
                {
                    b.HasOne("WanderListAPI.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WanderListAPI.Models.ShortlistContent", b =>
                {
                    b.HasOne("WanderListAPI.Models.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WanderListAPI.Models.Shortlist", "Shortlist")
                        .WithMany()
                        .HasForeignKey("ShortlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.UserReward", b =>
                {
                    b.HasOne("WanderListAPI.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.HasOne("WanderListAPI.Models.Reward", "Reward")
                        .WithMany()
                        .HasForeignKey("RewardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
