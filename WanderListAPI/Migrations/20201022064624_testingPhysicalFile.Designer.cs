// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WanderListAPI.Data;

namespace WanderListAPI.Migrations
{
    [DbContext(typeof(WanderListDbContext))]
    [Migration("20201022064624_testingPhysicalFile")]
    partial class testingPhysicalFile
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "9ff49cf1-81a4-430e-bd38-3b9c229b4b18",
                            ConcurrencyStamp = "03563a7f-6530-4cc4-ace3-239867460c9d",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "d098a91f-0510-42cf-b3fc-13f7ce5a0fac",
                            ConcurrencyStamp = "60cc499d-9476-46a1-a9ad-18cf15c039d5",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "49b3b6ec-ce67-46ff-a4e5-9c89754f9fea",
                            RoleId = "9ff49cf1-81a4-430e-bd38-3b9c229b4b18"
                        },
                        new
                        {
                            UserId = "f888d8ec-1103-4a30-bae2-bdf8cdbd9b67",
                            RoleId = "9ff49cf1-81a4-430e-bd38-3b9c229b4b18"
                        },
                        new
                        {
                            UserId = "4f2759c5-9dac-40a2-8d0d-e97e136581ac",
                            RoleId = "9ff49cf1-81a4-430e-bd38-3b9c229b4b18"
                        },
                        new
                        {
                            UserId = "ba044904-1bb9-49f8-8ac5-a2c29efaabba",
                            RoleId = "9ff49cf1-81a4-430e-bd38-3b9c229b4b18"
                        },
                        new
                        {
                            UserId = "3dc25e29-820b-4972-a7c5-6fc3362e6c9c",
                            RoleId = "9ff49cf1-81a4-430e-bd38-3b9c229b4b18"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Value")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WanderListAPI.Models.Activity", b =>
                {
                    b.Property<Guid>("ActivityId")
                        .HasColumnType("char(36)");

                    b.HasKey("ActivityId");

                    b.ToTable("Activity");

                    b.HasData(
                        new
                        {
                            ActivityId = new Guid("b448551f-148f-4227-91af-73a2bdc05a6d")
                        },
                        new
                        {
                            ActivityId = new Guid("35fc42d9-0e6a-4a9e-9cee-684f06350f51")
                        },
                        new
                        {
                            ActivityId = new Guid("135131d9-011d-486d-b511-c43af3dd21e2")
                        },
                        new
                        {
                            ActivityId = new Guid("a72ea357-728b-4b47-976e-1f49d298c082")
                        },
                        new
                        {
                            ActivityId = new Guid("2342d266-f702-4256-aa64-395f5d072a61")
                        },
                        new
                        {
                            ActivityId = new Guid("2b134a25-09e5-49e9-a7c6-2030cbf091f3")
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("CoverImageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<Guid?>("ProfilePicResourceMetaId")
                        .HasColumnType("char(36)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(256) CHARACTER SET utf8mb4")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.HasIndex("ProfilePicResourceMetaId");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "49b3b6ec-ce67-46ff-a4e5-9c89754f9fea",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2c6cdd71-dcf5-4940-afa2-db856ac86a78",
                            CoverImageId = new Guid("1831a3bd-3b3c-478c-b08d-defdf2962ae8"),
                            Email = "Norville.Rogers@pretend.com",
                            EmailConfirmed = false,
                            FirstName = "Norville",
                            LastName = "Rogers",
                            LockoutEnabled = false,
                            NormalizedEmail = "NORVILLE.ROGERS@PRETEND.COM",
                            NormalizedUserName = "SHAGGY",
                            PasswordHash = "AQAAAAEAACcQAAAAEF3qt0uZcmmFTy1u45CGgyLw0MtwiUIQiIYC84Vq1lO0TfS/D2gp6USVgY9I1mCIrA==",
                            PhoneNumberConfirmed = false,
                            Points = 100,
                            SecurityStamp = "37ede683-e669-445d-9ab5-39c0732453ea",
                            TwoFactorEnabled = false,
                            UserName = "Shaggy"
                        },
                        new
                        {
                            Id = "f888d8ec-1103-4a30-bae2-bdf8cdbd9b67",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2d0a63f2-7eb5-43a4-a967-23c9dd3564dc",
                            CoverImageId = new Guid("3412cbe5-ce64-420e-983f-296a6c1ccb15"),
                            Email = "Scoobert.Doo@pretend.com",
                            EmailConfirmed = false,
                            FirstName = "Scoobert",
                            LastName = "Doo",
                            LockoutEnabled = false,
                            NormalizedEmail = "SCOOBERT.DOO@PRETEND.COM",
                            NormalizedUserName = "SCOOBY",
                            PasswordHash = "AQAAAAEAACcQAAAAEHNMZI02vUY3MtxMjBS3rtU/dcoQxX1i/uzrOmFnJ+wEuoOO3xnYE227vWpvXO9TCw==",
                            PhoneNumberConfirmed = false,
                            Points = 500,
                            SecurityStamp = "85eb5410-ef84-4d0c-9c1b-f59d35e66835",
                            TwoFactorEnabled = false,
                            UserName = "Scooby"
                        },
                        new
                        {
                            Id = "4f2759c5-9dac-40a2-8d0d-e97e136581ac",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "aac1c66c-67a2-48b3-90ad-652d93557d25",
                            CoverImageId = new Guid("20ec2ac8-718d-48d3-8021-ffdebf4904d0"),
                            Email = "Velma.Dinkley@pretend.com",
                            EmailConfirmed = false,
                            FirstName = "Velma",
                            LastName = "Dinkley",
                            LockoutEnabled = false,
                            NormalizedEmail = "VELMA.DINKLEY@PRETEND.COM",
                            NormalizedUserName = "VELMA",
                            PasswordHash = "AQAAAAEAACcQAAAAEJk15FOjwDVDHsjaLI1aDh/EdP4PM0MP5UvQjF03csf49XXxzyLBeaeZCCu9W/osDw==",
                            PhoneNumberConfirmed = false,
                            Points = 400,
                            SecurityStamp = "b0283e2a-cfe2-432d-a4d5-b6cdef7022bf",
                            TwoFactorEnabled = false,
                            UserName = "Velma"
                        },
                        new
                        {
                            Id = "ba044904-1bb9-49f8-8ac5-a2c29efaabba",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d6795f31-dce6-4700-9030-3a0764f57d7a",
                            CoverImageId = new Guid("8e04f2d4-60e3-4c6a-91c8-dbb25e5ddcae"),
                            Email = "Fred.Jones@pretend.com",
                            EmailConfirmed = false,
                            FirstName = "Fred",
                            LastName = "Jones",
                            LockoutEnabled = false,
                            NormalizedEmail = "FRED.JONES@PRETEND.COM",
                            NormalizedUserName = "FRED",
                            PasswordHash = "AQAAAAEAACcQAAAAEJVBGwrfxgGFRLga10VkYuXtRcntYI0zRc7Ck/vfACnU2jl6t/8/lou7xSUDb3USTw==",
                            PhoneNumberConfirmed = false,
                            Points = 375,
                            SecurityStamp = "7a9247e7-fa96-493c-8b23-864ebd7568b6",
                            TwoFactorEnabled = false,
                            UserName = "Fred"
                        },
                        new
                        {
                            Id = "3dc25e29-820b-4972-a7c5-6fc3362e6c9c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a99ddde4-eca5-4f0a-93cc-d9d13f297b88",
                            CoverImageId = new Guid("fe487884-2a5f-4936-9ed7-9b98756b755b"),
                            Email = "Daphne.Blakeo@pretend.com",
                            EmailConfirmed = false,
                            FirstName = "Daphne",
                            LastName = "Blakeo",
                            LockoutEnabled = false,
                            NormalizedEmail = "DAPHNE.BLAKEO@PRETEND.COM",
                            NormalizedUserName = "DAPHNE",
                            PasswordHash = "AQAAAAEAACcQAAAAEN3tyw9g0sIUmT5M1RdhmfvrP5AMlrUlxAo/CXHT9rNoRXltaZHq5oOicaCiBbuq/w==",
                            PhoneNumberConfirmed = false,
                            Points = 400,
                            SecurityStamp = "b8f5e7da-3496-45c3-a0be-eca48503d7a4",
                            TwoFactorEnabled = false,
                            UserName = "Daphne"
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.City", b =>
                {
                    b.Property<Guid>("CityId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Country")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Video")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CityId");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            CityId = new Guid("1db30674-7fbd-4f87-8575-fc16066cfb45"),
                            Country = "Australia",
                            Video = "nDHlEG48b-M"
                        },
                        new
                        {
                            CityId = new Guid("c46703bc-fad3-45d5-9dc7-3003b6b4e4df"),
                            Country = "Australia",
                            Video = "Yc7r_bbt00M"
                        },
                        new
                        {
                            CityId = new Guid("05b2effc-2073-4b52-a61f-810f0d57f191"),
                            Country = "Australia",
                            Video = "Rzn5WGnS350"
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.Content", b =>
                {
                    b.Property<Guid>("ContentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<Guid>("CityId")
                        .HasColumnType("char(36)");

                    b.Property<int>("EconomicRating")
                        .HasColumnType("int");

                    b.Property<int>("EnvironmentalRating")
                        .HasColumnType("int");

                    b.Property<bool>("Featured")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("SocialRating")
                        .HasColumnType("int");

                    b.Property<string>("Website")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ContentId");

                    b.HasIndex("CityId");

                    b.ToTable("Content");

                    b.HasData(
                        new
                        {
                            ContentId = new Guid("b448551f-148f-4227-91af-73a2bdc05a6d"),
                            Capacity = 5,
                            CityId = new Guid("1db30674-7fbd-4f87-8575-fc16066cfb45"),
                            EconomicRating = 5,
                            EnvironmentalRating = 3,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("35fc42d9-0e6a-4a9e-9cee-684f06350f51"),
                            Capacity = 5,
                            CityId = new Guid("1db30674-7fbd-4f87-8575-fc16066cfb45"),
                            EconomicRating = 5,
                            EnvironmentalRating = 3,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("135131d9-011d-486d-b511-c43af3dd21e2"),
                            Capacity = 5,
                            CityId = new Guid("c46703bc-fad3-45d5-9dc7-3003b6b4e4df"),
                            EconomicRating = 5,
                            EnvironmentalRating = 5,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("a72ea357-728b-4b47-976e-1f49d298c082"),
                            Capacity = 5,
                            CityId = new Guid("05b2effc-2073-4b52-a61f-810f0d57f191"),
                            EconomicRating = 5,
                            EnvironmentalRating = 3,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("2342d266-f702-4256-aa64-395f5d072a61"),
                            Capacity = 5,
                            CityId = new Guid("05b2effc-2073-4b52-a61f-810f0d57f191"),
                            EconomicRating = 3,
                            EnvironmentalRating = 5,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("2b134a25-09e5-49e9-a7c6-2030cbf091f3"),
                            Capacity = 5,
                            CityId = new Guid("05b2effc-2073-4b52-a61f-810f0d57f191"),
                            EconomicRating = 5,
                            EnvironmentalRating = 5,
                            Featured = false,
                            SocialRating = 4
                        },
                        new
                        {
                            ContentId = new Guid("bc604b49-b75e-4bdb-baf1-cdaa1a21c2d0"),
                            Capacity = 5,
                            CityId = new Guid("1db30674-7fbd-4f87-8575-fc16066cfb45"),
                            EconomicRating = 5,
                            EnvironmentalRating = 5,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("4427d44d-f996-45d8-bff8-5697a51cf1ec"),
                            Capacity = 5,
                            CityId = new Guid("1db30674-7fbd-4f87-8575-fc16066cfb45"),
                            EconomicRating = 5,
                            EnvironmentalRating = 4,
                            Featured = false,
                            SocialRating = 3
                        },
                        new
                        {
                            ContentId = new Guid("eb127d9e-4622-4a70-a5e7-62e4fa2f7250"),
                            Capacity = 5,
                            CityId = new Guid("c46703bc-fad3-45d5-9dc7-3003b6b4e4df"),
                            EconomicRating = 3,
                            EnvironmentalRating = 3,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("48dd94ba-60cf-429d-8399-1ce19bffbc2b"),
                            Capacity = 5,
                            CityId = new Guid("c46703bc-fad3-45d5-9dc7-3003b6b4e4df"),
                            EconomicRating = 4,
                            EnvironmentalRating = 5,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("943a43a2-3d47-47e7-b2e9-80acd90f337a"),
                            Capacity = 5,
                            CityId = new Guid("c46703bc-fad3-45d5-9dc7-3003b6b4e4df"),
                            EconomicRating = 3,
                            EnvironmentalRating = 2,
                            Featured = false,
                            SocialRating = 5
                        },
                        new
                        {
                            ContentId = new Guid("8ad16df5-87db-448f-b979-33dfff6b3f06"),
                            Capacity = 5,
                            CityId = new Guid("05b2effc-2073-4b52-a61f-810f0d57f191"),
                            EconomicRating = 5,
                            EnvironmentalRating = 4,
                            Featured = false,
                            SocialRating = 5
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.Destination", b =>
                {
                    b.Property<Guid>("DestinationId")
                        .HasColumnType("char(36)");

                    b.HasKey("DestinationId");

                    b.ToTable("Destination");

                    b.HasData(
                        new
                        {
                            DestinationId = new Guid("bc604b49-b75e-4bdb-baf1-cdaa1a21c2d0")
                        },
                        new
                        {
                            DestinationId = new Guid("4427d44d-f996-45d8-bff8-5697a51cf1ec")
                        },
                        new
                        {
                            DestinationId = new Guid("eb127d9e-4622-4a70-a5e7-62e4fa2f7250")
                        },
                        new
                        {
                            DestinationId = new Guid("48dd94ba-60cf-429d-8399-1ce19bffbc2b")
                        },
                        new
                        {
                            DestinationId = new Guid("943a43a2-3d47-47e7-b2e9-80acd90f337a")
                        },
                        new
                        {
                            DestinationId = new Guid("8ad16df5-87db-448f-b979-33dfff6b3f06")
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.History", b =>
                {
                    b.Property<Guid>("ContentId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ContentId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("History");

                    b.HasData(
                        new
                        {
                            ContentId = new Guid("b448551f-148f-4227-91af-73a2bdc05a6d"),
                            UserId = "49b3b6ec-ce67-46ff-a4e5-9c89754f9fea",
                            Date = new DateTime(2020, 10, 22, 16, 46, 24, 46, DateTimeKind.Local).AddTicks(9724)
                        },
                        new
                        {
                            ContentId = new Guid("35fc42d9-0e6a-4a9e-9cee-684f06350f51"),
                            UserId = "49b3b6ec-ce67-46ff-a4e5-9c89754f9fea",
                            Date = new DateTime(2020, 10, 22, 16, 46, 24, 47, DateTimeKind.Local).AddTicks(3417)
                        },
                        new
                        {
                            ContentId = new Guid("b448551f-148f-4227-91af-73a2bdc05a6d"),
                            UserId = "f888d8ec-1103-4a30-bae2-bdf8cdbd9b67",
                            Date = new DateTime(2020, 10, 22, 16, 46, 24, 47, DateTimeKind.Local).AddTicks(6421)
                        },
                        new
                        {
                            ContentId = new Guid("2342d266-f702-4256-aa64-395f5d072a61"),
                            UserId = "4f2759c5-9dac-40a2-8d0d-e97e136581ac",
                            Date = new DateTime(2020, 10, 22, 16, 46, 24, 47, DateTimeKind.Local).AddTicks(6485)
                        },
                        new
                        {
                            ContentId = new Guid("35fc42d9-0e6a-4a9e-9cee-684f06350f51"),
                            UserId = "4f2759c5-9dac-40a2-8d0d-e97e136581ac",
                            Date = new DateTime(2020, 10, 22, 16, 46, 24, 47, DateTimeKind.Local).AddTicks(6551)
                        },
                        new
                        {
                            ContentId = new Guid("4427d44d-f996-45d8-bff8-5697a51cf1ec"),
                            UserId = "49b3b6ec-ce67-46ff-a4e5-9c89754f9fea",
                            Date = new DateTime(2020, 10, 22, 16, 46, 24, 53, DateTimeKind.Local).AddTicks(3995)
                        },
                        new
                        {
                            ContentId = new Guid("4427d44d-f996-45d8-bff8-5697a51cf1ec"),
                            UserId = "f888d8ec-1103-4a30-bae2-bdf8cdbd9b67",
                            Date = new DateTime(2020, 10, 22, 16, 46, 24, 53, DateTimeKind.Local).AddTicks(4051)
                        },
                        new
                        {
                            ContentId = new Guid("bc604b49-b75e-4bdb-baf1-cdaa1a21c2d0"),
                            UserId = "4f2759c5-9dac-40a2-8d0d-e97e136581ac",
                            Date = new DateTime(2020, 10, 22, 16, 46, 24, 53, DateTimeKind.Local).AddTicks(4059)
                        },
                        new
                        {
                            ContentId = new Guid("4427d44d-f996-45d8-bff8-5697a51cf1ec"),
                            UserId = "4f2759c5-9dac-40a2-8d0d-e97e136581ac",
                            Date = new DateTime(2020, 10, 22, 16, 46, 24, 53, DateTimeKind.Local).AddTicks(4065)
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.Item", b =>
                {
                    b.Property<Guid>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CoverImageId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("Lattitude")
                        .HasColumnType("double");

                    b.Property<double>("Longitude")
                        .HasColumnType("double");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ItemId");

                    b.HasIndex("CoverImageId");

                    b.ToTable("Item");

                    b.HasData(
                        new
                        {
                            ItemId = new Guid("b448551f-148f-4227-91af-73a2bdc05a6d"),
                            CoverImageId = new Guid("3d3fe775-f8d7-4961-9416-6ce026069acb"),
                            Description = "Tour Brisbanes best bars and clubs in a night of fun",
                            Lattitude = -27.470568,
                            Longitude = 153.024866,
                            Name = "Pub Crawl"
                        },
                        new
                        {
                            ItemId = new Guid("35fc42d9-0e6a-4a9e-9cee-684f06350f51"),
                            CoverImageId = new Guid("90966de5-403b-4b66-ae2c-35a9ad22ad62"),
                            Description = "Visit Brisbanes best universities",
                            Lattitude = -27.477118999999998,
                            Longitude = 153.02837199999999,
                            Name = "Uni tour"
                        },
                        new
                        {
                            ItemId = new Guid("135131d9-011d-486d-b511-c43af3dd21e2"),
                            CoverImageId = new Guid("cbcf83b1-d1ba-4c88-b365-eb227610dd97"),
                            Description = "Get the chance to spot humpback whales right outside of Sydney on this speed boat tour from Circular Quay or Manly Wharf.",
                            Lattitude = -33.856788999999999,
                            Longitude = 151.20925199999999,
                            Name = "Sydney Whale-Watching by Speed Boat"
                        },
                        new
                        {
                            ItemId = new Guid("a72ea357-728b-4b47-976e-1f49d298c082"),
                            CoverImageId = new Guid("6b23dfc5-fe1a-4f6e-af0d-267cc0582fdd"),
                            Description = "In an intimate group limited to 16 people, float over Yarra Valley vineyards at sunrise, when the landscapes look most magical.",
                            Lattitude = -37.631934999999999,
                            Longitude = 145.400453,
                            Name = "Yarra Valley Balloon Flight at Sunrise"
                        },
                        new
                        {
                            ItemId = new Guid("2342d266-f702-4256-aa64-395f5d072a61"),
                            CoverImageId = new Guid("a58bdc56-3385-4920-a800-71753b202c61"),
                            Description = "ArtVo is an art gallery with a difference—this immersive art space encourages people to touch, play, and interact with the art, and there are 11 themed zones to explore.",
                            Lattitude = -37.812648000000003,
                            Longitude = 144.93767099999999,
                            Name = "ArtVo Immersive Gallery Experience"
                        },
                        new
                        {
                            ItemId = new Guid("2b134a25-09e5-49e9-a7c6-2030cbf091f3"),
                            CoverImageId = new Guid("c23b9bc8-07d3-4a59-a093-7cb73f3e93f3"),
                            Description = "Explore Melbourne from the river at your own pace and without anyone getting in the way on this afternoon kayaking tour.",
                            Lattitude = -37.820380999999998,
                            Longitude = 144.95828700000001,
                            Name = "Melbourne City Afternoon Kayak Tour"
                        },
                        new
                        {
                            ItemId = new Guid("bc604b49-b75e-4bdb-baf1-cdaa1a21c2d0"),
                            CoverImageId = new Guid("b63e6bdd-def3-4170-a338-7b557266169d"),
                            Description = "The best uni in brisbane",
                            Lattitude = -27.497408,
                            Longitude = 153.01367999999999,
                            Name = "UQ"
                        },
                        new
                        {
                            ItemId = new Guid("4427d44d-f996-45d8-bff8-5697a51cf1ec"),
                            CoverImageId = new Guid("51c085b5-d7e7-44ca-8c07-50abe8d4e974"),
                            Description = "Super spooooky at night",
                            Lattitude = -27.498972999999999,
                            Longitude = 153.02712,
                            Name = "South Brisbane Cemetery"
                        },
                        new
                        {
                            ItemId = new Guid("eb127d9e-4622-4a70-a5e7-62e4fa2f7250"),
                            CoverImageId = new Guid("1b533d07-aa98-4efc-b301-61c84297a193"),
                            Description = "Australia's most famouse landmark",
                            Lattitude = -33.856650999999999,
                            Longitude = 151.21527599999999,
                            Name = "Sydney Opera House"
                        },
                        new
                        {
                            ItemId = new Guid("48dd94ba-60cf-429d-8399-1ce19bffbc2b"),
                            CoverImageId = new Guid("f526a386-539e-4b89-a25c-d02530c4917c"),
                            Description = "Explore the lush plant life, hidden pagodas, and colorful statues at your own speed, or join one of three informative tours that run during the day at no extra cost.",
                            Lattitude = -33.876274000000002,
                            Longitude = 151.20280199999999,
                            Name = "Chinese Garden of Friendship"
                        },
                        new
                        {
                            ItemId = new Guid("943a43a2-3d47-47e7-b2e9-80acd90f337a"),
                            CoverImageId = new Guid("7453b934-85bd-4d07-9857-11d7b03b64ad"),
                            Description = "See the more than 13,000 aquatic life forms in the 14 themed areas.",
                            Lattitude = -33.869349999999997,
                            Longitude = 151.202192,
                            Name = "SEA LIFE Sydney Aquarium"
                        },
                        new
                        {
                            ItemId = new Guid("8ad16df5-87db-448f-b979-33dfff6b3f06"),
                            CoverImageId = new Guid("b99f2dd2-09ab-4219-9a7a-c00c64a011e3"),
                            Description = "China Town’s great for Yum Cha, Chinese Food and a visit to Dessert Story, they have the best Taiwanese desserts!",
                            Lattitude = -37.811279999999996,
                            Longitude = 144.96880899999999,
                            Name = "Melbourne Chinatown"
                        },
                        new
                        {
                            ItemId = new Guid("1db30674-7fbd-4f87-8575-fc16066cfb45"),
                            CoverImageId = new Guid("92e3cb68-51de-417c-96c8-e60b7bc42cb5"),
                            Description = "Brisbane is the capital of Queensland, and the third most populous city in Australia.",
                            Lattitude = -27.467939999999999,
                            Longitude = 153.02808999999999,
                            Name = "Brisbane"
                        },
                        new
                        {
                            ItemId = new Guid("c46703bc-fad3-45d5-9dc7-3003b6b4e4df"),
                            CoverImageId = new Guid("15bb6143-62f9-422d-b746-afdc116fa582"),
                            Description = "Sydney is the state capital of New South Wales and the most populous city in Australia and Oceania.",
                            Lattitude = -33.867849999999997,
                            Longitude = 151.20732000000001,
                            Name = "Sydney"
                        },
                        new
                        {
                            ItemId = new Guid("05b2effc-2073-4b52-a61f-810f0d57f191"),
                            CoverImageId = new Guid("6acb6efa-c82f-4590-b2d8-fb11cc3d8b58"),
                            Description = "Melbourne is the capital of Victoria, and the second-most populous city in Australia and Oceania.",
                            Lattitude = -37.814,
                            Longitude = 144.96332000000001,
                            Name = "Melbourne"
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.Junctions.CityUser", b =>
                {
                    b.Property<Guid>("CityId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.HasKey("CityId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("CityUser");

                    b.HasData(
                        new
                        {
                            CityId = new Guid("1db30674-7fbd-4f87-8575-fc16066cfb45"),
                            UserId = "49b3b6ec-ce67-46ff-a4e5-9c89754f9fea",
                            Count = 3
                        },
                        new
                        {
                            CityId = new Guid("1db30674-7fbd-4f87-8575-fc16066cfb45"),
                            UserId = "f888d8ec-1103-4a30-bae2-bdf8cdbd9b67",
                            Count = 2
                        },
                        new
                        {
                            CityId = new Guid("05b2effc-2073-4b52-a61f-810f0d57f191"),
                            UserId = "4f2759c5-9dac-40a2-8d0d-e97e136581ac",
                            Count = 1
                        },
                        new
                        {
                            CityId = new Guid("1db30674-7fbd-4f87-8575-fc16066cfb45"),
                            UserId = "4f2759c5-9dac-40a2-8d0d-e97e136581ac",
                            Count = 3
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.Junctions.ContentResourceMeta", b =>
                {
                    b.Property<Guid>("ContentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ResourceMetaId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("ContentId", "ResourceMetaId");

                    b.HasIndex("ResourceMetaId");

                    b.ToTable("ContentResourceMeta");

                    b.HasData(
                        new
                        {
                            ContentId = new Guid("b448551f-148f-4227-91af-73a2bdc05a6d"),
                            ResourceMetaId = new Guid("3d3fe775-f8d7-4961-9416-6ce026069acb"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("b448551f-148f-4227-91af-73a2bdc05a6d"),
                            ResourceMetaId = new Guid("a4ef40ed-ba0d-455c-8835-bc171a33d66f"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("b448551f-148f-4227-91af-73a2bdc05a6d"),
                            ResourceMetaId = new Guid("f11036f7-4cfc-486f-a7f8-971e259c1dec"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("35fc42d9-0e6a-4a9e-9cee-684f06350f51"),
                            ResourceMetaId = new Guid("90966de5-403b-4b66-ae2c-35a9ad22ad62"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("35fc42d9-0e6a-4a9e-9cee-684f06350f51"),
                            ResourceMetaId = new Guid("5686c190-65b9-4d21-a876-e6ca20f19173"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("35fc42d9-0e6a-4a9e-9cee-684f06350f51"),
                            ResourceMetaId = new Guid("03a72a14-6ad1-4885-9349-441490edc007"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("135131d9-011d-486d-b511-c43af3dd21e2"),
                            ResourceMetaId = new Guid("cbcf83b1-d1ba-4c88-b365-eb227610dd97"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("135131d9-011d-486d-b511-c43af3dd21e2"),
                            ResourceMetaId = new Guid("df6fe27d-af5a-4f21-be80-992c190c7643"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("135131d9-011d-486d-b511-c43af3dd21e2"),
                            ResourceMetaId = new Guid("bbba1559-2c3b-4c1e-a722-a7ac293e1443"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("a72ea357-728b-4b47-976e-1f49d298c082"),
                            ResourceMetaId = new Guid("6b23dfc5-fe1a-4f6e-af0d-267cc0582fdd"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("a72ea357-728b-4b47-976e-1f49d298c082"),
                            ResourceMetaId = new Guid("2c5938de-9a09-40eb-94a3-52a102edac85"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("a72ea357-728b-4b47-976e-1f49d298c082"),
                            ResourceMetaId = new Guid("fd12e6a0-0717-4ff8-b84b-cf26125323d7"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("2342d266-f702-4256-aa64-395f5d072a61"),
                            ResourceMetaId = new Guid("a58bdc56-3385-4920-a800-71753b202c61"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("2342d266-f702-4256-aa64-395f5d072a61"),
                            ResourceMetaId = new Guid("4615dbae-e74b-4582-b5ff-a13b2d257ba1"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("2342d266-f702-4256-aa64-395f5d072a61"),
                            ResourceMetaId = new Guid("2b656ed4-bed7-4472-9b0d-faf09f40fe9d"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("2b134a25-09e5-49e9-a7c6-2030cbf091f3"),
                            ResourceMetaId = new Guid("c23b9bc8-07d3-4a59-a093-7cb73f3e93f3"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("2b134a25-09e5-49e9-a7c6-2030cbf091f3"),
                            ResourceMetaId = new Guid("b2ef3fea-efc8-49d9-98bc-34cbe4a3c00a"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("2b134a25-09e5-49e9-a7c6-2030cbf091f3"),
                            ResourceMetaId = new Guid("270266af-04c3-4afd-963b-d2bf3b21b2ba"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("bc604b49-b75e-4bdb-baf1-cdaa1a21c2d0"),
                            ResourceMetaId = new Guid("b63e6bdd-def3-4170-a338-7b557266169d"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("bc604b49-b75e-4bdb-baf1-cdaa1a21c2d0"),
                            ResourceMetaId = new Guid("72be0ec5-4b92-4021-84d9-61cf8766e5f8"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("bc604b49-b75e-4bdb-baf1-cdaa1a21c2d0"),
                            ResourceMetaId = new Guid("df78444d-517e-48ca-bcd0-f4d211657744"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("4427d44d-f996-45d8-bff8-5697a51cf1ec"),
                            ResourceMetaId = new Guid("51c085b5-d7e7-44ca-8c07-50abe8d4e974"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("4427d44d-f996-45d8-bff8-5697a51cf1ec"),
                            ResourceMetaId = new Guid("be959719-d2ff-4223-af1b-0b42c876be37"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("4427d44d-f996-45d8-bff8-5697a51cf1ec"),
                            ResourceMetaId = new Guid("1afe8e59-f39f-4882-a4c6-5e4e48ba111c"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("eb127d9e-4622-4a70-a5e7-62e4fa2f7250"),
                            ResourceMetaId = new Guid("1b533d07-aa98-4efc-b301-61c84297a193"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("eb127d9e-4622-4a70-a5e7-62e4fa2f7250"),
                            ResourceMetaId = new Guid("f3b539ee-038b-4cce-8854-411107430195"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("eb127d9e-4622-4a70-a5e7-62e4fa2f7250"),
                            ResourceMetaId = new Guid("37df0390-a4b0-4cce-9e89-0ae704764791"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("48dd94ba-60cf-429d-8399-1ce19bffbc2b"),
                            ResourceMetaId = new Guid("f526a386-539e-4b89-a25c-d02530c4917c"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("48dd94ba-60cf-429d-8399-1ce19bffbc2b"),
                            ResourceMetaId = new Guid("058be29f-19e9-4192-b4a6-4687c9143a72"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("48dd94ba-60cf-429d-8399-1ce19bffbc2b"),
                            ResourceMetaId = new Guid("54b4aad0-b9d7-4e6a-8dbb-bbbc64a0f8d5"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("943a43a2-3d47-47e7-b2e9-80acd90f337a"),
                            ResourceMetaId = new Guid("7453b934-85bd-4d07-9857-11d7b03b64ad"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("943a43a2-3d47-47e7-b2e9-80acd90f337a"),
                            ResourceMetaId = new Guid("3cd55a01-3eb1-4d04-a815-021dfab88205"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("943a43a2-3d47-47e7-b2e9-80acd90f337a"),
                            ResourceMetaId = new Guid("4123ff6f-d457-438e-afc6-c5ad8e5ef788"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("8ad16df5-87db-448f-b979-33dfff6b3f06"),
                            ResourceMetaId = new Guid("b99f2dd2-09ab-4219-9a7a-c00c64a011e3"),
                            Number = 0
                        },
                        new
                        {
                            ContentId = new Guid("8ad16df5-87db-448f-b979-33dfff6b3f06"),
                            ResourceMetaId = new Guid("b732cde8-93a8-474e-a94c-3aa85d41a626"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("8ad16df5-87db-448f-b979-33dfff6b3f06"),
                            ResourceMetaId = new Guid("ce23a3d1-4b37-49a1-a8e7-1af5aa9002f9"),
                            Number = 2
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.QR", b =>
                {
                    b.Property<Guid>("QRId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ContentId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("Expiry")
                        .HasColumnType("datetime(6)");

                    b.HasKey("QRId");

                    b.HasIndex("ContentId");

                    b.ToTable("QR");

                    b.HasData(
                        new
                        {
                            QRId = new Guid("09626616-7c04-46ba-b8ac-7ce587765289"),
                            ContentId = new Guid("b448551f-148f-4227-91af-73a2bdc05a6d"),
                            Expiry = new DateTime(2021, 1, 22, 16, 46, 24, 53, DateTimeKind.Local).AddTicks(9936)
                        },
                        new
                        {
                            QRId = new Guid("9225f341-7f60-4183-b0d9-1c419c8baeeb"),
                            ContentId = new Guid("35fc42d9-0e6a-4a9e-9cee-684f06350f51"),
                            Expiry = new DateTime(2021, 1, 22, 16, 46, 24, 54, DateTimeKind.Local).AddTicks(1077)
                        },
                        new
                        {
                            QRId = new Guid("d985d95d-b853-4a69-b246-86e81daba2fa"),
                            ContentId = new Guid("135131d9-011d-486d-b511-c43af3dd21e2"),
                            Expiry = new DateTime(2021, 1, 22, 16, 46, 24, 54, DateTimeKind.Local).AddTicks(1107)
                        },
                        new
                        {
                            QRId = new Guid("45bfdafe-e8ca-41ae-9e6a-8d4b2718ed1a"),
                            ContentId = new Guid("a72ea357-728b-4b47-976e-1f49d298c082"),
                            Expiry = new DateTime(2021, 1, 22, 16, 46, 24, 54, DateTimeKind.Local).AddTicks(1111)
                        },
                        new
                        {
                            QRId = new Guid("e3bfb998-927d-4fcd-8983-4ff18d75c05a"),
                            ContentId = new Guid("2342d266-f702-4256-aa64-395f5d072a61"),
                            Expiry = new DateTime(2021, 1, 22, 16, 46, 24, 54, DateTimeKind.Local).AddTicks(1115)
                        },
                        new
                        {
                            QRId = new Guid("3db4a3ef-8619-4db5-9be5-2974bca42a37"),
                            ContentId = new Guid("2b134a25-09e5-49e9-a7c6-2030cbf091f3"),
                            Expiry = new DateTime(2021, 1, 22, 16, 46, 24, 54, DateTimeKind.Local).AddTicks(1121)
                        },
                        new
                        {
                            QRId = new Guid("0c824642-4513-4f8c-ba65-e2b0a5ba5358"),
                            ContentId = new Guid("bc604b49-b75e-4bdb-baf1-cdaa1a21c2d0"),
                            Expiry = new DateTime(2021, 1, 22, 16, 46, 24, 54, DateTimeKind.Local).AddTicks(1126)
                        },
                        new
                        {
                            QRId = new Guid("46c0e9d4-982a-4599-b747-f66704d869ba"),
                            ContentId = new Guid("4427d44d-f996-45d8-bff8-5697a51cf1ec"),
                            Expiry = new DateTime(2021, 1, 22, 16, 46, 24, 54, DateTimeKind.Local).AddTicks(1129)
                        },
                        new
                        {
                            QRId = new Guid("8e39d7d1-4b7d-49a2-adcd-2811356ede6c"),
                            ContentId = new Guid("eb127d9e-4622-4a70-a5e7-62e4fa2f7250"),
                            Expiry = new DateTime(2021, 1, 22, 16, 46, 24, 54, DateTimeKind.Local).AddTicks(1131)
                        },
                        new
                        {
                            QRId = new Guid("3c7ec676-ae47-415a-950f-4b46e06f72d5"),
                            ContentId = new Guid("48dd94ba-60cf-429d-8399-1ce19bffbc2b"),
                            Expiry = new DateTime(2021, 1, 22, 16, 46, 24, 54, DateTimeKind.Local).AddTicks(1138)
                        },
                        new
                        {
                            QRId = new Guid("8e50038b-3ba5-48ac-96ca-5b95bd37495f"),
                            ContentId = new Guid("943a43a2-3d47-47e7-b2e9-80acd90f337a"),
                            Expiry = new DateTime(2021, 1, 22, 16, 46, 24, 54, DateTimeKind.Local).AddTicks(1141)
                        },
                        new
                        {
                            QRId = new Guid("9ad3b65e-7297-4c92-aadf-4cfa4921c9b9"),
                            ContentId = new Guid("8ad16df5-87db-448f-b979-33dfff6b3f06"),
                            Expiry = new DateTime(2021, 1, 22, 16, 46, 24, 54, DateTimeKind.Local).AddTicks(1143)
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.Resource", b =>
                {
                    b.Property<Guid>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<byte[]>("Data")
                        .HasColumnType("longblob");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ResourceId");

                    b.ToTable("Resource");

                    b.HasData(
                        new
                        {
                            ResourceId = new Guid("3d3fe775-f8d7-4961-9416-6ce026069acb"),
                            FilePath = "./Resources/Images/PubCrawl.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("a4ef40ed-ba0d-455c-8835-bc171a33d66f"),
                            FilePath = "./Resources/Images/PubCrawl - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("f11036f7-4cfc-486f-a7f8-971e259c1dec"),
                            FilePath = "./Resources/Images/PubCrawl - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("90966de5-403b-4b66-ae2c-35a9ad22ad62"),
                            FilePath = "./Resources/Images/UniTour.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("5686c190-65b9-4d21-a876-e6ca20f19173"),
                            FilePath = "./Resources/Images/UniTour - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("03a72a14-6ad1-4885-9349-441490edc007"),
                            FilePath = "./Resources/Images/UniTour - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("cbcf83b1-d1ba-4c88-b365-eb227610dd97"),
                            FilePath = "./Resources/Images/Balloon Flight.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("df6fe27d-af5a-4f21-be80-992c190c7643"),
                            FilePath = "./Resources/Images/Balloon Flight - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("bbba1559-2c3b-4c1e-a722-a7ac293e1443"),
                            FilePath = "./Resources/Images/Balloon Flight - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("6b23dfc5-fe1a-4f6e-af0d-267cc0582fdd"),
                            FilePath = "./Resources/Images/Balloon Flight.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("2c5938de-9a09-40eb-94a3-52a102edac85"),
                            FilePath = "./Resources/Images/Balloon Flight - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("fd12e6a0-0717-4ff8-b84b-cf26125323d7"),
                            FilePath = "./Resources/Images/Balloon Flight - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("a58bdc56-3385-4920-a800-71753b202c61"),
                            FilePath = "./Resources/Images/Art Gallery.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("4615dbae-e74b-4582-b5ff-a13b2d257ba1"),
                            FilePath = "./Resources/Images/Art Gallery - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("2b656ed4-bed7-4472-9b0d-faf09f40fe9d"),
                            FilePath = "./Resources/Images/Art Gallery - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("c23b9bc8-07d3-4a59-a093-7cb73f3e93f3"),
                            FilePath = "./Resources/Images/Balloon Flight.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("b2ef3fea-efc8-49d9-98bc-34cbe4a3c00a"),
                            FilePath = "./Resources/Images/Balloon Flight - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("270266af-04c3-4afd-963b-d2bf3b21b2ba"),
                            FilePath = "./Resources/Images/Balloon Flight - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("b63e6bdd-def3-4170-a338-7b557266169d"),
                            FilePath = "./Resources/Images/UQ.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("72be0ec5-4b92-4021-84d9-61cf8766e5f8"),
                            FilePath = "./Resources/Images/UQ - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("df78444d-517e-48ca-bcd0-f4d211657744"),
                            FilePath = "./Resources/Images/UQ - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("51c085b5-d7e7-44ca-8c07-50abe8d4e974"),
                            FilePath = "./Resources/Images/SouthBrisbaneCemetery.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("be959719-d2ff-4223-af1b-0b42c876be37"),
                            FilePath = "./Resources/Images/SouthBrisbaneCemetery - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("1afe8e59-f39f-4882-a4c6-5e4e48ba111c"),
                            FilePath = "./Resources/Images/SouthBrisbaneCemetery - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("1b533d07-aa98-4efc-b301-61c84297a193"),
                            FilePath = "./Resources/Images/OperaHouse.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("f3b539ee-038b-4cce-8854-411107430195"),
                            FilePath = "./Resources/Images/OperaHouse - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("37df0390-a4b0-4cce-9e89-0ae704764791"),
                            FilePath = "./Resources/Images/OperaHouse - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("f526a386-539e-4b89-a25c-d02530c4917c"),
                            FilePath = "./Resources/Images/OperaHouse.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("058be29f-19e9-4192-b4a6-4687c9143a72"),
                            FilePath = "./Resources/Images/OperaHouse - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("54b4aad0-b9d7-4e6a-8dbb-bbbc64a0f8d5"),
                            FilePath = "./Resources/Images/OperaHouse - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("7453b934-85bd-4d07-9857-11d7b03b64ad"),
                            FilePath = "./Resources/Images/Aquarium.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("3cd55a01-3eb1-4d04-a815-021dfab88205"),
                            FilePath = "./Resources/Images/Aquarium - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("4123ff6f-d457-438e-afc6-c5ad8e5ef788"),
                            FilePath = "./Resources/Images/Aquarium - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("b99f2dd2-09ab-4219-9a7a-c00c64a011e3"),
                            FilePath = "./Resources/Images/Chinatown.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("b732cde8-93a8-474e-a94c-3aa85d41a626"),
                            FilePath = "./Resources/Images/Chinatown - 2.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("ce23a3d1-4b37-49a1-a8e7-1af5aa9002f9"),
                            FilePath = "./Resources/Images/Chinatown - 3.jpg"
                        },
                        new
                        {
                            ResourceId = new Guid("3de69d8c-1320-4d8a-ad0a-89787815cf14"),
                            FilePath = "./Resources/Images/harold.jfif"
                        },
                        new
                        {
                            ResourceId = new Guid("e07913cf-3a41-47bb-87f6-b923c87a8e0f"),
                            FilePath = "./Resources/Images/DefaultUser.jfif"
                        },
                        new
                        {
                            ResourceId = new Guid("2b5a184d-73f5-46c2-accf-4b8382752bea"),
                            FilePath = "./Resources/Images/Velma.jfif"
                        },
                        new
                        {
                            ResourceId = new Guid("780bcb01-f687-4c5d-a48a-546a8fdc6cde"),
                            FilePath = "./Resources/Images/DefaultUser.jfif"
                        },
                        new
                        {
                            ResourceId = new Guid("ad2f5827-eabf-4445-bed1-fa9ab488cf2d"),
                            FilePath = "./Resources/Images/DefaultUser.jfif"
                        },
                        new
                        {
                            ResourceId = new Guid("92e3cb68-51de-417c-96c8-e60b7bc42cb5"),
                            FilePath = "./Resources/Images/Brisbane.jfif"
                        },
                        new
                        {
                            ResourceId = new Guid("15bb6143-62f9-422d-b746-afdc116fa582"),
                            FilePath = "./Resources/Images/Sydney.jfif"
                        },
                        new
                        {
                            ResourceId = new Guid("6acb6efa-c82f-4590-b2d8-fb11cc3d8b58"),
                            FilePath = "./Resources/Images/Melbourne.jfif"
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.ResourceMeta", b =>
                {
                    b.Property<Guid>("ResourceMetaId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("AddedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<long>("Length")
                        .HasColumnType("bigint");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("OnDisk")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ResourceMetaId");

                    b.ToTable("ResourceMeta");

                    b.HasData(
                        new
                        {
                            ResourceMetaId = new Guid("3d3fe775-f8d7-4961-9416-6ce026069acb"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 42, DateTimeKind.Local).AddTicks(531),
                            Description = "PubCrawl",
                            Extension = ".jpg",
                            FileName = "PubCrawl.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("a4ef40ed-ba0d-455c-8835-bc171a33d66f"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 44, DateTimeKind.Local).AddTicks(720),
                            Description = "PubCrawl - 2",
                            Extension = ".jpg",
                            FileName = "PubCrawl - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("f11036f7-4cfc-486f-a7f8-971e259c1dec"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 44, DateTimeKind.Local).AddTicks(3099),
                            Description = "PubCrawl - 3",
                            Extension = ".jpg",
                            FileName = "PubCrawl - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("90966de5-403b-4b66-ae2c-35a9ad22ad62"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 43, DateTimeKind.Local).AddTicks(658),
                            Description = "UniTour",
                            Extension = ".jpg",
                            FileName = "UniTour.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("5686c190-65b9-4d21-a876-e6ca20f19173"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 44, DateTimeKind.Local).AddTicks(8479),
                            Description = "UniTour - 2",
                            Extension = ".jpg",
                            FileName = "UniTour - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("03a72a14-6ad1-4885-9349-441490edc007"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 44, DateTimeKind.Local).AddTicks(9869),
                            Description = "UniTour - 3",
                            Extension = ".jpg",
                            FileName = "UniTour - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("cbcf83b1-d1ba-4c88-b365-eb227610dd97"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 43, DateTimeKind.Local).AddTicks(2128),
                            Description = "Balloon Flight",
                            Extension = ".jpg",
                            FileName = "Balloon Flight.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("df6fe27d-af5a-4f21-be80-992c190c7643"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 45, DateTimeKind.Local).AddTicks(1281),
                            Description = "Balloon Flight - 2",
                            Extension = ".jpg",
                            FileName = "Balloon Flight - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("bbba1559-2c3b-4c1e-a722-a7ac293e1443"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 45, DateTimeKind.Local).AddTicks(2827),
                            Description = "Balloon Flight - 3",
                            Extension = ".jpg",
                            FileName = "Balloon Flight - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("6b23dfc5-fe1a-4f6e-af0d-267cc0582fdd"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 43, DateTimeKind.Local).AddTicks(3198),
                            Description = "Balloon Flight",
                            Extension = ".jpg",
                            FileName = "Balloon Flight.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("2c5938de-9a09-40eb-94a3-52a102edac85"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 45, DateTimeKind.Local).AddTicks(3986),
                            Description = "Balloon Flight - 2",
                            Extension = ".jpg",
                            FileName = "Balloon Flight - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("fd12e6a0-0717-4ff8-b84b-cf26125323d7"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 45, DateTimeKind.Local).AddTicks(5255),
                            Description = "Balloon Flight - 3",
                            Extension = ".jpg",
                            FileName = "Balloon Flight - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("a58bdc56-3385-4920-a800-71753b202c61"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 43, DateTimeKind.Local).AddTicks(4838),
                            Description = "Art Gallery",
                            Extension = ".jpg",
                            FileName = "Art Gallery.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("4615dbae-e74b-4582-b5ff-a13b2d257ba1"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 45, DateTimeKind.Local).AddTicks(6666),
                            Description = "Art Gallery - 2",
                            Extension = ".jpg",
                            FileName = "Art Gallery - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("2b656ed4-bed7-4472-9b0d-faf09f40fe9d"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 45, DateTimeKind.Local).AddTicks(8261),
                            Description = "Art Gallery - 3",
                            Extension = ".jpg",
                            FileName = "Art Gallery - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("c23b9bc8-07d3-4a59-a093-7cb73f3e93f3"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 43, DateTimeKind.Local).AddTicks(5878),
                            Description = "Balloon Flight",
                            Extension = ".jpg",
                            FileName = "Balloon Flight.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("b2ef3fea-efc8-49d9-98bc-34cbe4a3c00a"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 45, DateTimeKind.Local).AddTicks(9339),
                            Description = "Balloon Flight - 2",
                            Extension = ".jpg",
                            FileName = "Balloon Flight - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("270266af-04c3-4afd-963b-d2bf3b21b2ba"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 46, DateTimeKind.Local).AddTicks(555),
                            Description = "Balloon Flight - 3",
                            Extension = ".jpg",
                            FileName = "Balloon Flight - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("b63e6bdd-def3-4170-a338-7b557266169d"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 48, DateTimeKind.Local).AddTicks(7668),
                            Description = "UQ",
                            Extension = ".jpg",
                            FileName = "UQ.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("72be0ec5-4b92-4021-84d9-61cf8766e5f8"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 50, DateTimeKind.Local).AddTicks(7072),
                            Description = "UQ - 2",
                            Extension = ".jpg",
                            FileName = "UQ - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("df78444d-517e-48ca-bcd0-f4d211657744"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 51, DateTimeKind.Local).AddTicks(24),
                            Description = "UQ - 3",
                            Extension = ".jpg",
                            FileName = "UQ - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("51c085b5-d7e7-44ca-8c07-50abe8d4e974"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 49, DateTimeKind.Local).AddTicks(1815),
                            Description = "SouthBrisbaneCemetery",
                            Extension = ".jpg",
                            FileName = "SouthBrisbaneCemetery.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("be959719-d2ff-4223-af1b-0b42c876be37"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 51, DateTimeKind.Local).AddTicks(7534),
                            Description = "SouthBrisbaneCemetery - 2",
                            Extension = ".jpg",
                            FileName = "SouthBrisbaneCemetery - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("1afe8e59-f39f-4882-a4c6-5e4e48ba111c"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 51, DateTimeKind.Local).AddTicks(8821),
                            Description = "SouthBrisbaneCemetery - 3",
                            Extension = ".jpg",
                            FileName = "SouthBrisbaneCemetery - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("1b533d07-aa98-4efc-b301-61c84297a193"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 49, DateTimeKind.Local).AddTicks(3550),
                            Description = "OperaHouse",
                            Extension = ".jpg",
                            FileName = "OperaHouse.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("f3b539ee-038b-4cce-8854-411107430195"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 52, DateTimeKind.Local).AddTicks(1543),
                            Description = "OperaHouse - 2",
                            Extension = ".jpg",
                            FileName = "OperaHouse - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("37df0390-a4b0-4cce-9e89-0ae704764791"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 52, DateTimeKind.Local).AddTicks(3161),
                            Description = "OperaHouse - 3",
                            Extension = ".jpg",
                            FileName = "OperaHouse - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("f526a386-539e-4b89-a25c-d02530c4917c"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 49, DateTimeKind.Local).AddTicks(4894),
                            Description = "OperaHouse",
                            Extension = ".jpg",
                            FileName = "OperaHouse.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("058be29f-19e9-4192-b4a6-4687c9143a72"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 52, DateTimeKind.Local).AddTicks(5455),
                            Description = "OperaHouse - 2",
                            Extension = ".jpg",
                            FileName = "OperaHouse - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("54b4aad0-b9d7-4e6a-8dbb-bbbc64a0f8d5"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 52, DateTimeKind.Local).AddTicks(6598),
                            Description = "OperaHouse - 3",
                            Extension = ".jpg",
                            FileName = "OperaHouse - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("7453b934-85bd-4d07-9857-11d7b03b64ad"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 49, DateTimeKind.Local).AddTicks(6489),
                            Description = "Aquarium",
                            Extension = ".jpg",
                            FileName = "Aquarium.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("3cd55a01-3eb1-4d04-a815-021dfab88205"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 52, DateTimeKind.Local).AddTicks(8054),
                            Description = "Aquarium - 2",
                            Extension = ".jpg",
                            FileName = "Aquarium - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("4123ff6f-d457-438e-afc6-c5ad8e5ef788"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 52, DateTimeKind.Local).AddTicks(9528),
                            Description = "Aquarium - 3",
                            Extension = ".jpg",
                            FileName = "Aquarium - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("b99f2dd2-09ab-4219-9a7a-c00c64a011e3"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 49, DateTimeKind.Local).AddTicks(9253),
                            Description = "Chinatown",
                            Extension = ".jpg",
                            FileName = "Chinatown.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("b732cde8-93a8-474e-a94c-3aa85d41a626"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 53, DateTimeKind.Local).AddTicks(1115),
                            Description = "Chinatown - 2",
                            Extension = ".jpg",
                            FileName = "Chinatown - 2.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("ce23a3d1-4b37-49a1-a8e7-1af5aa9002f9"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 53, DateTimeKind.Local).AddTicks(3749),
                            Description = "Chinatown - 3",
                            Extension = ".jpg",
                            FileName = "Chinatown - 3.jpg",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("3de69d8c-1320-4d8a-ad0a-89787815cf14"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 40, DateTimeKind.Local).AddTicks(110),
                            Description = "harold",
                            Extension = ".jfif",
                            FileName = "harold.jfif",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("e07913cf-3a41-47bb-87f6-b923c87a8e0f"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 34, DateTimeKind.Local).AddTicks(3547),
                            Description = "DefaultUser",
                            Extension = ".jfif",
                            FileName = "DefaultUser.jfif",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("2b5a184d-73f5-46c2-accf-4b8382752bea"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 40, DateTimeKind.Local).AddTicks(1494),
                            Description = "Velma",
                            Extension = ".jfif",
                            FileName = "Velma.jfif",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("780bcb01-f687-4c5d-a48a-546a8fdc6cde"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 37, DateTimeKind.Local).AddTicks(1214),
                            Description = "DefaultUser",
                            Extension = ".jfif",
                            FileName = "DefaultUser.jfif",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("ad2f5827-eabf-4445-bed1-fa9ab488cf2d"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 38, DateTimeKind.Local).AddTicks(5255),
                            Description = "DefaultUser",
                            Extension = ".jfif",
                            FileName = "DefaultUser.jfif",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("92e3cb68-51de-417c-96c8-e60b7bc42cb5"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 18, DateTimeKind.Local).AddTicks(7215),
                            Description = "Brisbane",
                            Extension = ".jfif",
                            FileName = "Brisbane.jfif",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("15bb6143-62f9-422d-b746-afdc116fa582"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 27, DateTimeKind.Local).AddTicks(5988),
                            Description = "Sydney",
                            Extension = ".jfif",
                            FileName = "Sydney.jfif",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        },
                        new
                        {
                            ResourceMetaId = new Guid("6acb6efa-c82f-4590-b2d8-fb11cc3d8b58"),
                            AddedOn = new DateTime(2020, 10, 22, 16, 46, 24, 27, DateTimeKind.Local).AddTicks(7994),
                            Description = "Melbourne",
                            Extension = ".jfif",
                            FileName = "Melbourne.jfif",
                            Length = 0L,
                            MimeType = "image/jpeg",
                            OnDisk = true
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.Reward", b =>
                {
                    b.Property<Guid>("RewardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CityId")
                        .HasColumnType("char(36)");

                    b.Property<int>("CountThreshold")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Value")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("RewardId");

                    b.HasIndex("CityId");

                    b.ToTable("Reward");

                    b.HasData(
                        new
                        {
                            RewardId = new Guid("ffc970f1-da66-4d34-bc8a-477f01736a8a"),
                            CityId = new Guid("1db30674-7fbd-4f87-8575-fc16066cfb45"),
                            CountThreshold = 1,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Uni Tour Discount",
                            Value = "15% Off your next tour"
                        },
                        new
                        {
                            RewardId = new Guid("5f3ec24a-daae-4945-8f47-ae5f91ac35a8"),
                            CityId = new Guid("1db30674-7fbd-4f87-8575-fc16066cfb45"),
                            CountThreshold = 4,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Drink Discount",
                            Value = "$5 OFF a jug of beer with any meal purchase"
                        },
                        new
                        {
                            RewardId = new Guid("b59fcd99-c4f2-485b-a9dc-bb1a46e6bb62"),
                            CityId = new Guid("c46703bc-fad3-45d5-9dc7-3003b6b4e4df"),
                            CountThreshold = 1,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sydney Aquarium Voucher",
                            Value = "5% off your next ticket"
                        },
                        new
                        {
                            RewardId = new Guid("17ed77c8-91ac-4b40-ac0b-dbe077364edd"),
                            CityId = new Guid("c46703bc-fad3-45d5-9dc7-3003b6b4e4df"),
                            CountThreshold = 0,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Free tour of Chinese Garden of Friendship",
                            Value = "Free tour with any ticket purchase"
                        },
                        new
                        {
                            RewardId = new Guid("5bd90a76-b34d-44a9-8efb-0096da28acee"),
                            CityId = new Guid("05b2effc-2073-4b52-a61f-810f0d57f191"),
                            CountThreshold = 1,
                            ExpiryDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Save when you bring a Friend",
                            Value = "1/2 price for the scond person for your Melbourne City Afternoon Kayak Tour"
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.Shortlist", b =>
                {
                    b.Property<Guid>("ShortlistId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("ListName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("ShortlistId");

                    b.HasIndex("UserId");

                    b.ToTable("Shortlist");

                    b.HasData(
                        new
                        {
                            ShortlistId = new Guid("de987f5b-a15e-4942-bdd4-933b12b0e337"),
                            ListName = "Brisbane Holiday",
                            UserId = "4f2759c5-9dac-40a2-8d0d-e97e136581ac"
                        },
                        new
                        {
                            ShortlistId = new Guid("40031af5-bf1b-4572-9c07-133f3673529f"),
                            ListName = "Bucket List",
                            UserId = "4f2759c5-9dac-40a2-8d0d-e97e136581ac"
                        },
                        new
                        {
                            ShortlistId = new Guid("d92b3c04-9d55-43ac-bfaf-064b9a2e59b1"),
                            ListName = "Shag Spots",
                            UserId = "49b3b6ec-ce67-46ff-a4e5-9c89754f9fea"
                        },
                        new
                        {
                            ShortlistId = new Guid("7f9ba63f-ee42-4b45-a075-9b23898f06b1"),
                            ListName = "Ghost Sightings",
                            UserId = "49b3b6ec-ce67-46ff-a4e5-9c89754f9fea"
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.ShortlistContent", b =>
                {
                    b.Property<Guid>("ContentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("ShortlistId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("ContentId", "ShortlistId");

                    b.HasIndex("ShortlistId");

                    b.ToTable("ShortlistContent");

                    b.HasData(
                        new
                        {
                            ContentId = new Guid("b448551f-148f-4227-91af-73a2bdc05a6d"),
                            ShortlistId = new Guid("de987f5b-a15e-4942-bdd4-933b12b0e337"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("35fc42d9-0e6a-4a9e-9cee-684f06350f51"),
                            ShortlistId = new Guid("de987f5b-a15e-4942-bdd4-933b12b0e337"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("135131d9-011d-486d-b511-c43af3dd21e2"),
                            ShortlistId = new Guid("40031af5-bf1b-4572-9c07-133f3673529f"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("a72ea357-728b-4b47-976e-1f49d298c082"),
                            ShortlistId = new Guid("d92b3c04-9d55-43ac-bfaf-064b9a2e59b1"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("bc604b49-b75e-4bdb-baf1-cdaa1a21c2d0"),
                            ShortlistId = new Guid("de987f5b-a15e-4942-bdd4-933b12b0e337"),
                            Number = 3
                        },
                        new
                        {
                            ContentId = new Guid("4427d44d-f996-45d8-bff8-5697a51cf1ec"),
                            ShortlistId = new Guid("7f9ba63f-ee42-4b45-a075-9b23898f06b1"),
                            Number = 1
                        },
                        new
                        {
                            ContentId = new Guid("eb127d9e-4622-4a70-a5e7-62e4fa2f7250"),
                            ShortlistId = new Guid("40031af5-bf1b-4572-9c07-133f3673529f"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("48dd94ba-60cf-429d-8399-1ce19bffbc2b"),
                            ShortlistId = new Guid("d92b3c04-9d55-43ac-bfaf-064b9a2e59b1"),
                            Number = 2
                        },
                        new
                        {
                            ContentId = new Guid("4427d44d-f996-45d8-bff8-5697a51cf1ec"),
                            ShortlistId = new Guid("d92b3c04-9d55-43ac-bfaf-064b9a2e59b1"),
                            Number = 3
                        });
                });

            modelBuilder.Entity("WanderListAPI.Models.UserReward", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<Guid>("RewardId")
                        .HasColumnType("char(36)");

                    b.Property<string>("AppUserId")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("UserId", "RewardId");

                    b.HasIndex("AppUserId");

                    b.HasIndex("RewardId");

                    b.ToTable("UserReward");

                    b.HasData(
                        new
                        {
                            UserId = "49b3b6ec-ce67-46ff-a4e5-9c89754f9fea",
                            RewardId = new Guid("ffc970f1-da66-4d34-bc8a-477f01736a8a")
                        },
                        new
                        {
                            UserId = "49b3b6ec-ce67-46ff-a4e5-9c89754f9fea",
                            RewardId = new Guid("5f3ec24a-daae-4945-8f47-ae5f91ac35a8")
                        },
                        new
                        {
                            UserId = "f888d8ec-1103-4a30-bae2-bdf8cdbd9b67",
                            RewardId = new Guid("ffc970f1-da66-4d34-bc8a-477f01736a8a")
                        },
                        new
                        {
                            UserId = "f888d8ec-1103-4a30-bae2-bdf8cdbd9b67",
                            RewardId = new Guid("5f3ec24a-daae-4945-8f47-ae5f91ac35a8")
                        },
                        new
                        {
                            UserId = "4f2759c5-9dac-40a2-8d0d-e97e136581ac",
                            RewardId = new Guid("5bd90a76-b34d-44a9-8efb-0096da28acee")
                        },
                        new
                        {
                            UserId = "4f2759c5-9dac-40a2-8d0d-e97e136581ac",
                            RewardId = new Guid("ffc970f1-da66-4d34-bc8a-477f01736a8a")
                        },
                        new
                        {
                            UserId = "4f2759c5-9dac-40a2-8d0d-e97e136581ac",
                            RewardId = new Guid("5f3ec24a-daae-4945-8f47-ae5f91ac35a8")
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WanderListAPI.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WanderListAPI.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WanderListAPI.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WanderListAPI.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.Activity", b =>
                {
                    b.HasOne("WanderListAPI.Models.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.AppUser", b =>
                {
                    b.HasOne("WanderListAPI.Models.ResourceMeta", "ProfilePic")
                        .WithMany()
                        .HasForeignKey("ProfilePicResourceMetaId");
                });

            modelBuilder.Entity("WanderListAPI.Models.City", b =>
                {
                    b.HasOne("WanderListAPI.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.Content", b =>
                {
                    b.HasOne("WanderListAPI.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WanderListAPI.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.Destination", b =>
                {
                    b.HasOne("WanderListAPI.Models.Content", "Content")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.History", b =>
                {
                    b.HasOne("WanderListAPI.Models.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WanderListAPI.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.Item", b =>
                {
                    b.HasOne("WanderListAPI.Models.ResourceMeta", "CoverImage")
                        .WithMany()
                        .HasForeignKey("CoverImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.Junctions.CityUser", b =>
                {
                    b.HasOne("WanderListAPI.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WanderListAPI.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.Junctions.ContentResourceMeta", b =>
                {
                    b.HasOne("WanderListAPI.Models.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WanderListAPI.Models.ResourceMeta", "ResourceMeta")
                        .WithMany()
                        .HasForeignKey("ResourceMetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.QR", b =>
                {
                    b.HasOne("WanderListAPI.Models.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.ResourceMeta", b =>
                {
                    b.HasOne("WanderListAPI.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceMetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.Reward", b =>
                {
                    b.HasOne("WanderListAPI.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.Shortlist", b =>
                {
                    b.HasOne("WanderListAPI.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("WanderListAPI.Models.ShortlistContent", b =>
                {
                    b.HasOne("WanderListAPI.Models.Content", "Content")
                        .WithMany()
                        .HasForeignKey("ContentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WanderListAPI.Models.Shortlist", "Shortlist")
                        .WithMany()
                        .HasForeignKey("ShortlistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WanderListAPI.Models.UserReward", b =>
                {
                    b.HasOne("WanderListAPI.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.HasOne("WanderListAPI.Models.Reward", "Reward")
                        .WithMany()
                        .HasForeignKey("RewardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
